$ gocdk help deploy
Deploy the application to the biome's configured deployment target.

By default, a new Docker image is built and deployed; use --image to skip the
build and use an existing tagged image instead.

Usage:
  gocdk deploy <biome name> [flags]

Flags:
      --apply                whether to run "biome apply" before deploying (default true)
  -h, --help                 help for deploy
      --image [name][:tag]   Docker image to deploy in the form [name][:tag]; name defaults to image name from Dockerfile, tag defaults to latest; empty string builds a new image
  -v, --verbose              true to print all output from Terraform during "biome apply"

$ gocdk deploy -h
Deploy the application to the biome's configured deployment target.

By default, a new Docker image is built and deployed; use --image to skip the
build and use an existing tagged image instead.

Usage:
  gocdk deploy <biome name> [flags]

Flags:
      --apply                whether to run "biome apply" before deploying (default true)
  -h, --help                 help for deploy
      --image [name][:tag]   Docker image to deploy in the form [name][:tag]; name defaults to image name from Dockerfile, tag defaults to latest; empty string builds a new image
  -v, --verbose              true to print all output from Terraform during "biome apply"

$ gocdk deploy --help
Deploy the application to the biome's configured deployment target.

By default, a new Docker image is built and deployed; use --image to skip the
build and use an existing tagged image instead.

Usage:
  gocdk deploy <biome name> [flags]

Flags:
      --apply                whether to run "biome apply" before deploying (default true)
  -h, --help                 help for deploy
      --image [name][:tag]   Docker image to deploy in the form [name][:tag]; name defaults to image name from Dockerfile, tag defaults to latest; empty string builds a new image
  -v, --verbose              true to print all output from Terraform during "biome apply"
