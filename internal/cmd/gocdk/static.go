// Code generated by vfsgen; DO NOT EDIT.

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// static statically implements the virtual filesystem provided to vfsgen.
var static = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Time{},
		},
		"/demo": &vfsgen۰DirInfo{
			name:    "demo",
			modTime: time.Time{},
		},
		"/demo/blob.bucket": &vfsgen۰DirInfo{
			name:    "blob.bucket",
			modTime: time.Time{},
		},
		"/demo/blob.bucket/demo_blob_bucket.go": &vfsgen۰CompressedFileInfo{
			name:             "demo_blob_bucket.go",
			modTime:          time.Time{},
			uncompressedSize: 7364,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x5f\x73\xdb\x36\x12\x7f\x16\x3f\xc5\x86\x33\xd7\x23\x7b\x0a\xd9\x87\x7b\xb8\xd1\x49\xea\xd4\x7f\xd2\x7a\xe2\xc6\x99\xd8\x69\xe7\xa6\xd3\x49\x20\x72\x69\x21\x22\x01\x06\x00\x25\x6b\x34\xfa\xee\x37\x0b\x90\x12\x69\xd2\xae\x1d\xdf\xcb\xf9\x21\xa1\x40\xe0\xb7\x8b\xdd\xfd\xed\x1f\x96\x2c\x59\xb1\x5b\x84\x82\x71\xe1\x79\xbc\x28\xa5\x32\x10\x78\x23\x3f\x91\xc2\xe0\x9d\xf1\xbd\x91\x8f\x4a\x49\xa5\xe9\x29\x2b\xec\xc2\xd2\x14\x79\x6c\xb0\x28\x73\x66\x90\x16\xb8\xa4\x7f\x05\x9a\x78\x69\x4c\x49\xcf\x52\xfb\x9e\x37\xf2\x6f\x65\x92\xcb\x2a\x8d\x52\x5c\xc7\x8b\x5c\x2e\x7c\x6f\xf4\x09\x7a\xab\x71\xc6\x73\x7c\xe4\x75\x81\x85\x7b\x1b\x7a\x5e\x1c\xc3\xcd\xd5\xd9\x55\xa0\xd6\x4c\xdc\xa2\x30\xe1\x04\x6e\x96\x5c\x03\x41\x00\xd7\x50\x69\x54\xaf\xd7\x5c\xf3\x45\x8e\x63\x60\x69\x0a\x05\x13\x5b\x48\x64\x51\xa0\x30\x1a\xf0\xae\xcc\x19\x17\x5c\xdc\x12\xd4\x52\x6e\x80\x1b\xd8\x48\xb5\xd2\x91\xe7\x65\x95\x48\x80\x0b\x6e\x82\x10\x76\xde\x88\x2e\x13\xfd\xc2\x44\x9a\xe3\x9b\x4a\x24\x81\x1f\xa7\x58\x48\xab\x53\xb4\xa8\x92\x15\x9a\xd8\x1f\x03\xfd\x3c\xb1\xbf\x4e\x98\x46\xb7\x5d\x85\x4f\x3a\x9d\x73\x6d\x3a\x08\x97\x5c\x9b\x67\x21\xac\x39\x6e\x3a\x08\xbf\x71\xdc\x3c\x0b\x61\xa3\xb8\xc1\x0e\xc4\xef\xb4\x72\xc0\xd8\x7b\xde\x9a\x29\x70\xbb\x3f\x7e\xb8\x04\x6d\x14\x59\xef\xb8\x08\xdf\x5b\x3c\x77\xb8\xb5\x7e\xae\x14\xd8\xd8\xe9\x19\x76\xc0\x89\x27\x97\x57\x27\x9f\x4e\x3e\x9e\xbe\x3d\xbf\xf9\x64\xa5\x2c\x65\x95\xa7\xb0\x40\xe0\x02\x90\x25\x4b\x58\x70\x59\xe0\xdf\x35\x24\x52\x64\xfc\x16\x74\x95\x2c\x2d\x92\x59\x32\x43\x4e\x4c\x98\xa0\xed\x0a\x59\x0a\x4b\x54\x18\x79\xa3\xa3\xd2\x33\x90\x3a\xfa\x19\x0d\x8a\x75\xe0\xdf\x93\xe5\x87\xde\x88\x67\xad\x1b\xce\x66\xe0\xfb\xa4\x67\x07\xc0\x2f\xb0\x98\xc4\xb1\xef\x8d\xf6\x0d\xf2\xb8\x75\xd3\x99\xb5\x60\x74\x55\xa2\x70\x96\x08\x6a\x0a\x45\x27\x2c\x59\xdd\x2a\x59\x89\x34\x08\xc7\x47\x31\xd6\xb4\x0f\x85\x33\xd7\x50\x2a\x34\x66\x0b\x8a\x6d\xe0\x97\x9b\x5f\x2f\x23\xb8\x76\x26\xd9\x20\x2c\xd9\x1a\x81\xd9\xa0\x96\x02\xb4\xd9\xe6\x08\x7a\x89\x68\x62\x34\x49\x04\x99\x54\x40\x7e\xd6\x3f\x7a\x9e\xd9\x96\x78\x2f\x44\xcf\x98\x61\xe4\xc5\x2a\x31\x74\xc9\x96\x4f\x47\x47\x97\xed\x7b\x47\x29\x36\x07\x8e\x36\x7f\x6d\x88\xe6\xcf\x41\x8d\xe8\xe4\xd5\xe2\x0b\x26\x46\xc3\x1f\x7f\xba\x68\x39\xae\x0d\x88\xa2\x20\xfe\x36\x51\x6f\x71\xdb\xdb\xf6\x6c\xf1\x96\x00\x8f\xc8\x1f\xd6\x60\x50\x87\xe3\x56\x0b\x7a\x4a\x21\x41\x69\xa8\xb3\x7a\x5d\x25\x09\x6a\x0d\xb0\x90\x32\x27\x7d\x12\x29\xb4\x4d\xc3\x47\x9d\x6e\xea\x74\xfb\x5e\x61\xc6\xef\x60\x06\x9f\xbd\xe9\xab\xb3\xab\xd3\x9b\xff\xbc\x3f\x07\x4a\xc8\x73\x6f\xda\xfc\x87\x2c\x9d\x7b\x00\xd3\x02\x0d\x83\x64\xc9\x94\x46\x33\xf3\x3f\xde\xbc\x79\xfd\x2f\xdf\xbe\x30\xdc\xe4\x38\x6f\xb1\xd6\x86\xcb\x34\x76\xeb\xde\x34\x76\x10\xd3\x85\x4c\xb7\xf6\x40\x49\xff\x82\x0b\xcd\x92\xea\x05\xed\x17\xda\x28\x66\x50\x83\x59\x22\xe5\x5d\x90\x19\x30\xf8\x59\xc2\xe9\xd9\x5b\x68\x81\x47\x84\x10\x97\x6d\xa0\x0b\x43\x11\x9e\x54\x4a\xa1\x30\xf9\x16\x2a\xcd\xc5\x2d\xb0\xf6\x29\x58\x30\x8d\x29\x48\x61\xe1\xc9\xfc\xfe\x6e\x07\x11\x3d\xec\xf7\xfe\x18\x36\x4b\x9e\x2c\x2d\x58\x4d\x7c\x97\x17\x2a\x85\x29\xac\x39\xb3\xa7\x50\xac\xb9\x92\x82\x32\x3f\xac\x99\xe2\x6c\x91\x23\xf4\xe8\x3f\xa0\xdf\x35\x22\x4c\x19\x2c\x15\x66\x33\x9f\x92\xa8\x9e\xc4\x71\xbb\x2e\x25\x52\x24\x58\x1a\x1d\x57\x2a\xd7\xb1\x3f\xa7\x84\x33\x8d\xd9\xdc\x72\xaf\x90\x0a\x2d\x0c\x17\x99\x54\x05\x33\x5c\x0a\x60\x0b\x59\x19\xba\x87\xa6\x8c\x56\x5b\xe9\xa7\xf7\x17\xba\x2d\xbe\xca\x9d\xfc\x69\xce\xe7\x07\xf9\x91\xab\x13\x73\x8a\x59\x2b\x83\xae\x96\x34\x91\x24\x33\xfb\xdb\xa5\x95\x69\x9c\xf3\x41\x04\x5b\x27\xe6\xc4\xab\x41\x04\x06\xba\xc4\x84\x67\x3c\xb1\x2e\x20\x0d\x9f\x00\xea\x4a\xc7\xdc\xc6\xb0\x85\x65\x20\x70\xd3\x20\x18\xd9\xc3\x98\xc6\x74\xc1\xdd\x8e\x67\x10\x9d\x2b\xb5\xdf\x3b\x93\x4f\xb5\x51\x52\xdc\xce\x77\x3b\xb7\x3a\x8d\xeb\x05\x6b\x96\xdd\x0e\x45\xba\xdf\x7f\xf6\x86\xe8\x70\x5d\x65\x07\x3a\xc4\x2e\x5c\xa7\xb1\xe5\x01\xed\x8f\x63\xb8\x10\x65\x65\x26\xae\x44\x75\x53\x60\xd4\xc6\xa3\xc5\x06\xb3\x4e\xe5\x83\xbc\xfb\xc7\xc0\x2b\xa7\xc3\x43\xe2\x9a\xb4\xd9\x11\x47\x8b\x4f\x13\xf7\xd9\x03\xd8\xed\x14\x55\x07\x68\x65\x2d\x6d\x6d\x07\x30\x4d\xf9\xda\xf9\x86\xb6\x91\x5d\x2f\xf4\x19\x57\xf5\x5b\xbb\xa3\x1b\x46\x3f\x96\x16\x79\x46\x5c\xa2\x44\xb5\xdf\xfb\xf3\xe3\x33\x79\xf1\x80\x86\xb9\xc6\x61\x20\x8a\xa6\x1f\x57\xb8\x7d\x12\x0a\x39\xcf\xe9\x1a\xd7\xca\x36\x1e\xfd\x06\x6b\x36\x95\xa1\x63\x4d\x5a\x7c\x8e\x35\xc9\x4c\x03\xa6\x24\xae\x3a\xbd\x4f\x97\x52\x6a\xac\xf3\x11\x18\x09\x74\xe1\x89\xdb\xa5\x31\xc7\xc4\x80\x60\x05\xce\xfc\x15\x6e\xfd\xe3\x55\x1f\xf4\x92\x3d\x28\x4b\x9b\x07\xd6\x2c\xaf\x70\xe6\xef\x76\x64\x2c\x67\x37\xf7\x34\x8d\xdd\x8e\x61\xd3\x39\xb1\x35\x0d\x17\x2a\xae\x9f\x38\x59\x08\xa8\x7e\xcd\x7c\x5d\x2d\x0a\x6e\x6a\x7d\xa6\x71\x73\x9d\x17\x58\xfb\x50\x08\x3b\xe6\xb6\xab\xcf\xb5\x77\xbb\xd0\xd5\x97\xfa\x5d\x49\x83\xc0\xcd\x2b\xef\x5e\xb4\xb5\x3c\x71\x42\x0e\x58\xe1\x96\x9c\x60\xd3\x0d\x3d\x04\xd4\xd1\x97\x0a\xd7\x5c\x56\xda\xf9\x68\xc3\xf3\x9c\x8a\x80\x5c\xa3\xa2\x7d\x06\x45\x38\x79\xcc\x58\x76\xb8\x69\x79\xf1\xe8\x97\x63\x44\xdf\x3b\x6f\x3b\x82\x46\x8f\x1e\x38\x01\x32\x85\xac\xc6\x6c\xb2\xab\x0f\x4a\x6e\xf4\xcc\xff\xa7\x0f\x89\xcc\xe9\xe1\x07\x47\x95\x6e\x3f\x40\xee\x6f\x10\x9e\xe2\xe4\x46\x5d\x8b\x02\x17\xe6\xd5\x37\xb9\x3d\x74\xbd\x7d\xd0\xcb\x84\x45\x99\x03\xcc\xa0\x99\xf1\xa2\x5f\x2b\x6d\x82\xc3\xaf\x77\xb8\x09\xfc\xfb\xa5\xda\x0f\xa3\xf7\xd4\x69\x04\xc3\x49\x35\x0c\x7b\xf9\xef\x99\x42\x6c\x11\xec\x0b\x69\xa7\xd2\xae\x10\x9b\x16\x9e\x29\xc4\xd6\xc9\xbe\x90\x76\x86\xe9\x0a\x71\x64\x20\x29\x4f\x17\xe2\xea\x66\x5f\x4a\x87\x58\x61\x48\xee\xb1\x83\xd3\xe0\x84\x19\x6c\xc0\x4e\x77\x1f\x50\x97\x52\x68\xb4\x87\xd5\x18\x14\x7e\x85\xef\xeb\x37\x5f\x2b\xd4\xc6\x4e\x5c\x2e\x84\x26\x33\xf8\xae\x5f\x08\x77\x1f\x3f\x5c\x4e\x8e\x73\xc9\xde\x4e\x43\xa8\x14\x6d\xef\xc7\x45\x74\x7e\x87\x49\x65\x30\xd8\x8c\xc1\xa2\x86\xff\xb6\x9b\x5f\xcd\x40\xf0\xdc\x4e\x4d\x56\xfa\x39\x35\xc3\xb4\x09\x95\xaa\x7f\x84\x63\xa7\xf2\xb5\x61\xa6\xd2\x17\xc2\xa0\x12\x2c\xbf\x46\xb5\x46\x65\x77\x84\x34\x5b\xb9\xa9\x68\x70\x26\xb6\x31\xe0\xfa\x4d\x6e\xb0\xb0\x9d\x14\x83\x66\x16\x2b\xa5\xa6\xb1\x7f\x0b\x95\x48\x51\x01\x03\xdf\xd5\x3a\x9f\xf0\xbe\x56\xa8\xb6\x50\x32\xc5\x0a\x34\xa8\x22\x38\xa7\x99\x92\xf0\x30\x85\x94\x2b\x4c\x8c\x54\x5b\xea\x4a\x19\xe4\x5c\xac\x88\xe8\xf4\xd6\x8d\x97\x87\x0d\x63\xc2\x62\x22\x75\x23\xa9\x90\xe2\xf5\x03\x67\x29\x90\xdc\xd9\x8c\xe7\x18\xdd\x77\x64\xeb\x52\x2f\x77\x64\xd3\x62\xf4\x1d\x99\x62\x86\x0a\x48\xb6\x1b\xbc\x07\x3d\xdb\x90\xf1\x09\x9e\x7d\x91\x6b\x69\x6e\xde\x07\xa1\xd7\x9a\xb6\xcf\xbb\xf0\x56\x6a\x54\x4f\xd3\xcd\x06\x6f\x34\x52\x68\x2a\x25\xec\xe0\x2d\x4b\xa3\x0f\xd7\x77\xa5\xd6\x56\x4d\x4d\xe7\xcf\x30\xe7\x05\x59\x6f\x02\x7e\xec\x8f\xbd\xd1\xc8\x55\xa2\x09\xa5\x46\x85\x5f\xa3\x37\x52\x15\xbf\x51\xe6\x0c\x9a\xd8\x08\xc7\x16\x96\x0e\x59\xab\xb8\x89\x85\x70\x03\x12\x15\x7a\x23\xea\xe8\x09\x5c\x2e\xbe\x8c\x1b\xe3\xd1\xf6\xe8\x1d\xde\x99\x80\x50\x4f\xdd\xa0\x1f\x50\x66\x68\x2c\x3c\x9b\x01\x97\xd1\xf9\xd5\x1b\x67\xb7\x85\x42\xb6\x72\x26\x68\x76\xb4\xcd\xda\xbe\x78\x56\x18\x67\xd4\x2c\xf0\xdf\x30\x9e\x63\x4a\xf1\x44\x12\x99\x2b\x7f\x02\xef\x4c\x67\x52\x5a\xe1\x76\x02\x7f\x5b\xfb\x56\x3d\xd2\xe1\x60\x30\x27\xcf\x82\xb7\xa7\xe0\x19\xb0\xb2\x44\x91\x06\xbd\x57\x63\x90\x8b\x2f\xa1\x33\x49\x06\x39\x8a\xfe\x96\x90\xee\xf6\x43\xcf\x5f\xee\x2b\xa1\x4b\x76\x42\x5a\xfd\x2c\x3f\x9d\x45\xfd\x86\xda\xf7\x78\xd0\xfa\x5c\xf5\x72\x1e\x34\xcd\x21\xa9\xd6\xa5\x02\x85\xc2\x5b\xb2\xd2\xbd\x20\xa0\xca\x5f\x47\x80\x5e\xf1\xf2\xd0\xd4\x4c\x66\x90\xb1\x5c\xe3\x30\x83\x5e\x75\xf6\x3a\x07\x0e\xf0\xaa\xa9\x3f\x4f\xe1\xd5\xcb\x88\x65\xdd\xfc\xbf\x60\x17\xcf\x9c\x86\xb6\x05\x3a\x7e\x06\x8b\x63\x78\x27\x6d\x1b\xe6\xda\x50\x4c\x23\xf8\x80\x75\x96\xa5\x86\x03\x36\xdc\x2c\x81\x41\xaa\x64\x99\xca\x8d\xa0\x30\x4d\x5c\x13\x2d\x05\x46\x24\x7c\x80\x60\x82\xe7\xa4\x7d\x43\xb0\xa7\x32\xec\x01\x8a\x1d\x38\x66\xad\x31\xc4\xb2\x07\x69\x96\x7d\x23\xcd\x8e\x3c\xab\x65\x7e\x03\xd3\x9a\x94\xf0\x57\x5c\x7b\x26\xd9\x6c\x38\x00\x35\xd5\x8d\x07\x7f\xb2\x0e\xdc\x30\x0d\xa5\x92\x6b\x9e\x92\x13\xcf\xe4\x46\xe4\x92\xa5\x6e\x52\xa7\x46\x9a\x9c\x61\xcb\xd6\x0a\xb7\xe4\xb7\x4e\xa8\xcf\xc0\xa8\x0a\x6d\xc8\xb0\x94\xb8\xd9\xc4\xbc\x73\xea\x3b\xdc\x7c\xb0\x2f\xba\x3e\x1b\x1f\x63\x6a\x0c\xb5\xcf\x9f\x91\x03\x8f\xce\x49\x14\x92\x16\x4e\xc6\x63\x19\xcf\x91\xd6\x29\x19\x9d\xe6\x52\x63\x60\x85\xca\xe8\x54\x96\x5b\x22\x98\x7b\x17\x3a\xcb\xdc\xff\x02\x7b\x2a\x85\xe6\x14\xdc\x1a\x8d\xe1\xe2\x16\xea\x36\xfd\xf5\xcd\xb6\xc4\xf1\xe1\xd7\x25\x8a\x5b\xb3\x84\xa5\x85\xd2\xd1\x70\x82\x6b\x7f\x4c\x7f\x79\x86\x3b\x0c\x64\x87\x14\x77\xfc\xeb\x27\xbb\xe3\xdf\x03\x69\xaf\xfb\x51\xb2\x97\x1d\x0f\x33\x4c\x9d\x22\x9f\xd4\x4d\x1c\x1a\xe2\xff\x8b\x76\x62\x20\xe1\x7d\xf7\x5d\xbd\xd4\x9d\xd0\x8e\xd9\xf0\xaf\xf3\xe5\x43\x54\x45\xba\x08\x30\xdb\x37\x62\x51\x9a\xed\xfd\xd1\xd6\x32\x77\x08\xff\x21\x5d\x1e\x97\xa4\x65\x71\xf8\xce\x77\x10\x33\x20\xa3\x4b\x63\x2b\xeb\xa7\x3c\x7f\x84\xc5\x7f\xfc\xb9\xd8\x1a\x0c\x06\x74\x0b\x1d\xc5\x7b\xae\x7e\x88\xdd\xee\xe6\x8e\xe3\x1d\x4a\xb7\x92\x57\x4b\x4c\xf3\xa9\xbc\xc9\x44\x44\xb9\xff\x06\x00\x00\xff\xff\xe6\x67\x61\x79\xc4\x1c\x00\x00"),
		},
		"/demo/secrets.keeper": &vfsgen۰DirInfo{
			name:    "secrets.keeper",
			modTime: time.Time{},
		},
		"/demo/secrets.keeper/demo_secrets_keeper.go": &vfsgen۰CompressedFileInfo{
			name:             "demo_secrets_keeper.go",
			modTime:          time.Time{},
			uncompressedSize: 5596,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\xff\x73\xdb\xb6\x15\xff\x59\xfc\x2b\x5e\x78\xb7\x9e\xd8\x2a\x64\x7b\x97\x76\xab\x47\xaa\x97\xda\x72\xe6\x4b\x56\xbb\x96\xb3\xdd\x6e\xb7\x4b\x20\xf2\xd1\x42\x4d\x02\x2c\x00\x4a\x76\x7d\xfc\xdf\x77\x0f\x00\xa9\x2f\x56\x7c\x71\x93\xdd\xb6\xfc\x10\x4b\x00\xde\xe7\x7d\xfd\x3c\xe0\xa9\x61\xf9\x0d\xbb\x46\xa8\x19\x17\x41\xc0\xeb\x46\x2a\x03\xe3\x60\x14\xe6\x52\x18\xbc\x35\x61\x30\x0a\x51\xe4\xb2\xe0\xe2\x3a\x59\x30\x8d\xdf\xbd\xa0\xa5\xb2\xb6\x3b\x4b\x53\x57\x89\xc1\xba\xa9\x98\x41\x5a\x10\x68\x92\xa5\x31\x0d\x7d\x96\x3a\x0c\x82\x51\x78\x2d\xf3\x4a\xb6\x45\x5c\xe0\x2a\xd1\x98\x2b\x34\x3a\x0c\x46\xef\xe0\xd0\x46\x52\xc9\x9c\x55\xc3\xa9\x28\x08\x92\x04\xae\xce\x4f\xce\xc7\x6a\xc5\xc4\x35\x0a\x13\x1d\xc1\xd5\x92\x6b\x28\x79\x85\xc0\x35\xb4\x1a\xd5\xf3\x15\xd7\x7c\x51\xe1\x04\x58\x51\x40\xcd\xc4\x1d\xe4\xb2\xae\x51\x18\x0d\x78\xdb\x54\x8c\x0b\x2e\xae\x09\x6a\x29\xd7\xc0\x0d\xac\xa5\xba\xd1\x71\x10\x94\xad\xc8\x81\x0b\x6e\xc6\x11\xdc\x07\x23\x32\x3c\xfe\x0b\x13\x45\x85\xa7\xad\xc8\xc7\x61\x52\x60\x2d\x7b\xdb\xe2\x1b\xc4\x06\x55\x12\x4e\xc0\xaf\xbc\xb6\x0b\x33\x91\xab\xbb\xc6\x38\x39\x15\x7d\x2c\x0c\x3a\xb1\xcf\x84\x56\xe0\x41\xb4\x13\xdc\x45\xeb\x82\x60\xc5\x14\x38\xa1\xb7\x97\x6f\x40\x1b\x45\xa1\xd9\x2c\xc2\x97\x3d\xb2\x43\xd8\xda\x9a\x29\x05\xa8\x94\x54\x0f\x02\xb7\xc1\xcb\x40\xea\xf8\x15\x1a\x14\xab\x71\x38\x9f\x1d\x5f\xce\xae\xe6\xef\x5e\xcf\x66\x17\xb3\xcb\x77\x6f\x2f\xdf\x84\x51\x30\xe2\xe5\x96\xfe\x2c\x83\x30\x24\x88\xd1\x81\x44\x5f\x62\x2d\x57\x08\x05\x96\xac\xad\x0c\x50\x8d\xa9\x38\x18\xed\xa8\x0b\x5d\x4d\xde\xe0\xdd\x51\x92\xe8\xfa\xd5\xe2\x97\xfa\x8f\xdf\xfc\x74\x5b\x7c\x73\x76\xfd\xed\xe9\xfc\xeb\xf5\x2f\xdf\xcf\xab\xc5\x6f\x2f\xcf\x94\x90\xd5\xf1\x6f\xdf\x2f\x7e\xfe\xf9\xbb\xf6\xe5\xb2\x7a\x91\x85\xc1\xa8\xeb\x2d\x9f\x6c\x79\x98\xf5\x11\x8c\xcf\x1b\x14\x2e\x08\x63\x4f\x86\xf8\x47\x96\xdf\x5c\x2b\xd9\x8a\x62\x1c\x4d\x36\x6e\xd8\xc0\x9a\xbb\x06\xf7\xa2\xcf\x0c\xa3\x08\xb7\xb9\x21\x17\xb7\xe2\x3d\xda\x8a\xe5\xe8\x4c\x00\xfd\x73\x5b\x90\x24\xb6\xa6\x81\x8b\xa6\x35\xc1\xe8\xbc\x35\xbb\x9b\xb2\x35\x76\xe3\x47\xeb\x37\x2c\xa4\xac\x48\x7b\x2e\x85\xb6\xc4\xdd\xb1\xe0\xca\x53\xf3\x42\x61\xc9\x6f\x21\x83\xf7\x41\xfa\xec\xe4\xfc\xf8\xea\x1f\x17\x33\x20\xf2\x4e\x83\xb4\xff\x83\xac\x98\x06\x00\x69\x8d\x86\x41\xbe\x64\x4a\xa3\xc9\xc2\xb7\x57\xa7\xcf\xff\x14\xda\x0d\xc3\x4d\x85\xd3\xdd\xf2\x00\x2a\xc6\x34\x71\x5b\x41\x9a\x38\x94\x74\x21\x8b\x3b\x2b\xd3\xd0\xff\xe0\x28\xdb\x50\x9f\xa1\xf3\x42\x1b\xc5\x0c\x6a\x30\x4b\x24\x67\x41\x96\xc0\xe0\x95\x84\xe3\x93\xd7\xb0\x8b\x1f\x13\x48\xd2\x6c\x63\x9d\x19\xe2\x7d\xde\x2a\x85\xc2\x54\x77\xd0\x6a\x8a\x0c\xdb\x13\x04\xaa\x8b\x02\xa4\xb0\x4a\x28\xf4\xe1\xfd\x3d\xc4\xf4\xa1\xeb\xc2\x09\xac\x97\x3c\x5f\x5a\xbc\x9c\x09\x58\x20\xe4\x52\x94\xfc\xba\x55\x58\xc0\x8a\x33\x2b\x85\x62\xc5\x95\x14\xd4\x48\x60\xc5\x14\x67\x8b\x0a\xe1\x50\x55\x1f\xb0\x72\x8e\x08\x29\x83\xa5\xc2\x32\x0b\x89\xc3\xfa\x28\x49\xb6\x3b\x5e\x2e\x45\x8e\x8d\xd1\x49\xab\x2a\x9d\x84\xd3\x25\x2a\x4c\x13\x36\x85\x52\x2a\xa8\xa5\x42\x0b\xc3\x45\x29\x55\xcd\x0c\x97\x02\xd8\x42\xb6\x86\x5c\xd1\xc0\x45\x1f\xae\x97\x17\x67\x7a\x5b\x7d\x5b\x39\xfd\x69\xc5\xa7\x83\xfe\x78\xe8\x36\x53\xdf\x5f\xac\x26\x17\x39\xf2\xd4\xc5\x2c\x4d\x2a\x7e\x50\xba\xef\x2e\x53\xdf\x4f\x1e\x95\x4e\x13\x67\xc3\xfd\x3d\x2f\x21\x9e\x29\xd5\x75\x0e\xb3\x99\xa6\xda\x28\x29\xae\xa7\x94\x09\x62\x40\xd7\xa5\x89\x5f\xf2\xf6\xdf\xdf\xa3\x28\xba\x2e\x78\xff\x81\x42\x9e\xb7\xe5\x50\xc8\x89\xab\xb2\x34\x71\x15\xfc\x3e\x08\xa8\x89\x9c\x11\x6f\x8e\x86\x36\xb6\x61\x62\xbc\x07\xe9\x23\xd1\x23\x6f\x88\x7f\x90\x3a\x5f\xc1\x7b\xf2\x8d\xb2\x31\xed\xdd\xb1\x7f\x01\x66\xc2\xa0\x02\x7b\xcd\x50\x93\x80\x82\x68\x6f\x24\xf8\x98\x1f\xf9\x63\xe9\x42\x25\xbd\x48\x4a\x07\x99\x42\x06\x4a\xae\x75\x16\xbe\x08\x21\x97\x95\xce\xc2\x6f\xbf\x0e\x41\xb0\x1a\xb3\x70\xc0\x0b\xa1\x62\x0b\xac\xb2\xf0\x62\xd0\xb0\x01\x0f\x6d\x2c\xcf\x84\x0d\x65\x0f\xea\x0d\x4c\xbc\x85\xa9\x6d\x25\x40\xfd\x29\x0b\xf3\x25\xe6\x37\x0b\x79\x1b\x02\x2f\x32\xdf\x3c\x7b\x95\xfd\xb7\x15\xab\x5a\xcc\x42\xa3\x5a\x0c\x7d\x1a\x5d\xb7\xe9\x3a\x2b\x8e\x85\x4f\x53\x5f\x2c\x64\x1f\xd5\xed\x00\x31\xbd\x5a\xa2\x8b\x03\x5b\x50\x0b\xe7\x1a\xdc\x0e\xd8\xb7\x04\x16\x69\x62\x85\x3c\xc0\x10\x99\x1d\x53\x75\xbb\xa8\xb9\x19\xcc\xf1\xf9\x7a\xe6\x9a\x51\xd2\x67\xc2\xd9\x77\xde\x9a\x4d\x99\x0d\x79\xb1\x02\x58\x80\x42\x4d\x17\xc8\x78\xd7\x86\xe8\xc9\x99\x51\xc8\x0a\x29\xaa\xbb\x3e\x36\x3e\x31\xfb\x8a\x5c\x52\xa8\x73\x3f\x96\x95\x82\xaf\x06\xa5\x0f\xa8\xf6\x43\xce\x9b\x25\x2a\x92\xcd\x36\x60\x5f\x38\x07\xec\x8a\xef\xff\x5d\x37\xb0\x12\xb8\x25\xa6\x57\xe3\xe1\x07\x42\xc1\x57\x87\xeb\xdb\x31\xea\x89\xdc\xf1\x1a\x3f\x17\x77\x9c\x5b\xcf\x7d\x5e\x06\x02\xf9\x58\xfc\x4e\x02\x6d\x22\x38\x24\xea\x78\x58\xda\x82\xff\x5f\xa5\xd0\x9c\x1e\xab\xbe\x72\x77\x03\xf4\x3b\xc8\xe3\x13\xf6\xf1\xe4\xf1\x02\x43\x4d\x7f\x2e\xae\xec\xe3\x7e\x0a\x57\x7c\x0f\xfc\x61\x68\x95\x07\xa9\x32\x04\x7e\xb8\xfc\x3e\x89\x28\x91\x7b\x42\xef\xbf\xb4\xfa\xdb\xa4\x6e\x2a\xc8\xa0\x1f\x89\xe2\xbf\xb6\xda\x8c\x87\x6f\x3f\xe1\x7a\x1c\xee\xbd\x53\xfa\x46\x1e\xc5\x17\xf4\xe4\x1a\x3f\x76\x47\x45\xd1\x07\x78\xf8\x64\xad\x7d\xed\x1f\xd4\xba\xc7\xee\x28\xf2\x83\xd8\x23\x83\x0a\xb0\xaa\x92\xeb\xe1\x45\xa7\xdc\x15\x45\xdc\xd6\xb2\xc6\x81\xd1\x0b\xec\xfd\xc5\x22\x76\x53\xc4\x23\xa0\xe3\x35\xd8\xe9\xe7\x12\x75\x23\x85\xc6\xbf\x2b\x6e\xe8\xb1\xae\xf0\x57\xf8\xd2\xef\xfc\xda\xa2\x36\x76\x08\x71\xd5\x7f\x94\xc1\x17\x0f\xda\x17\xcd\x17\x6f\x2f\xdf\x1c\x51\xc2\x87\x47\xfb\x24\x18\x8d\xce\x84\x5d\x23\xc4\xf8\x54\xaa\xfa\x6f\xc4\x96\xf1\xd6\xdd\x1b\xd1\x29\x57\x40\x47\xfb\xa7\x3c\x51\x23\x3b\xc4\xd8\x22\x9f\xd8\x99\xa2\xc0\x12\x15\x90\x73\x6e\x3a\xa2\x89\x07\x95\x22\xd3\x3e\x54\x32\xf1\xec\x16\xf3\xd6\xe0\x78\x3d\x71\x0f\xff\xe8\xcf\x56\xe4\x59\x06\x82\x57\x16\xc4\x0d\x82\x33\x9a\x19\xe8\x14\x2a\xe5\xbf\x44\x13\x17\xa5\xb9\x61\xa6\xd5\x67\x14\x74\xc1\xaa\x39\xaa\x95\x1d\x68\x24\x0d\x91\x64\x56\x37\x8e\x82\xad\xe9\x6b\xb6\x0b\x6f\xb5\xc6\x6e\x00\x1a\x0e\x04\xa3\x91\x42\xd3\x2a\x61\xfd\xe2\xa5\xb3\x8d\x7a\xe5\xb3\x61\x6e\x23\x32\x70\x01\xff\xfc\xd7\xe2\xce\xa0\x73\xd6\x9d\xf2\x17\x94\xb5\x9d\x0e\xe1\x30\xf2\x8c\x48\x9d\x75\x01\x32\xdf\xda\xe2\xb9\x29\x66\xfe\x67\x86\xf8\x04\xa9\xcd\xcd\xed\xc8\x33\xee\x55\x46\x56\xac\x7c\x10\x96\x1d\xcb\xcb\xda\xb8\xa8\x94\xe3\xad\xe7\x92\xad\xbe\x35\xd3\x20\x24\x3d\xe4\x2b\x5e\x40\x9f\xd2\x3f\xac\x42\x6b\x88\x45\x1f\x9c\xb5\xf1\x1a\x75\x80\x95\x46\xa7\x85\x0b\xc8\xbc\x8f\x3b\x16\xd1\xb9\xa1\xa2\x27\x7d\x9a\x5d\x00\x63\x9f\xe0\x31\xd5\xcd\xb1\x9b\x20\x29\x5b\xdc\x4a\x1e\x70\xe5\x43\x9e\x9c\x32\x5e\x61\xb1\xfd\xa4\xdc\xb5\x7b\x30\xbb\x1b\x12\x49\x4d\xf0\x60\x6c\xed\x07\xbc\x92\x3e\xba\x83\xed\x11\xa5\xb8\x7b\x48\xf3\xdd\x5f\x10\x3e\x9e\xe6\x05\x3e\x42\xf3\x5d\xd0\xff\x1a\xcd\xb7\x5e\x08\xff\x49\x9e\x6f\x35\xe9\xff\x63\x9e\xf7\x8c\x3d\x7a\x1a\x65\x9f\x50\xe6\x5b\xaf\xb3\x8f\x65\xec\x4e\xe5\x0f\x25\xb7\xcf\x43\x9f\x80\xcf\xc8\xc3\xfe\x65\xfa\x18\x0f\x0f\xf5\xc1\xa7\x91\x73\x70\x28\x7a\xd0\x8d\x36\x30\xfa\xd0\x59\x47\xe6\x7f\x07\x00\x00\xff\xff\x13\x1e\x21\x8b\xdc\x15\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/demo"].(os.FileInfo),
	}
	fs["/demo"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/demo/blob.bucket"].(os.FileInfo),
		fs["/demo/secrets.keeper"].(os.FileInfo),
	}
	fs["/demo/blob.bucket"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/demo/blob.bucket/demo_blob_bucket.go"].(os.FileInfo),
	}
	fs["/demo/secrets.keeper"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/demo/secrets.keeper/demo_secrets_keeper.go"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
