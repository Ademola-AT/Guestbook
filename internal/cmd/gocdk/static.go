// Code generated by vfsgen; DO NOT EDIT.

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// static statically implements the virtual filesystem provided to vfsgen.
var static = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Time{},
		},
		"/demo": &vfsgen۰DirInfo{
			name:    "demo",
			modTime: time.Time{},
		},
		"/demo/blob.bucket": &vfsgen۰DirInfo{
			name:    "blob.bucket",
			modTime: time.Time{},
		},
		"/demo/blob.bucket/demo_blob_bucket.go": &vfsgen۰CompressedFileInfo{
			name:             "demo_blob_bucket.go",
			modTime:          time.Time{},
			uncompressedSize: 7454,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x5f\x6f\xdb\x38\x12\x7f\xb6\x3e\xc5\x54\xc0\xed\x49\x7b\xae\xb4\x0f\xf7\x70\xf0\xd9\x2e\x9a\x3f\xdd\x0d\x9a\x6d\x8a\x26\xdd\xc5\x61\xb1\x68\x69\x69\x14\xb3\x96\x48\x95\xa4\xec\x18\x86\xbf\xfb\x61\x48\xc9\x96\x62\x25\x1b\x27\xf7\x72\x7e\x48\x24\xfe\xf9\xcd\x70\x66\x7e\xc3\x19\x95\x2c\x59\xb0\x5b\x84\x82\x71\xe1\x79\xbc\x28\xa5\x32\x10\x78\x03\x3f\x91\xc2\xe0\x9d\xf1\xbd\x81\x8f\x4a\x49\xa5\xe9\x29\x2b\xec\xc0\xdc\x14\x79\x6c\xb0\x28\x73\x66\x90\x06\xb8\xa4\xbf\x02\x4d\x3c\x37\xa6\xa4\x67\xa9\x7d\xcf\x1b\xf8\xb7\x32\xc9\x65\x95\x46\x29\x2e\xe3\x59\x2e\x67\xbe\x37\xf8\x02\x07\xa3\x71\xc6\x73\x7c\x64\xba\xc0\xc2\xcd\x86\x9e\x17\xc7\x70\x73\x75\x76\x15\xa8\x25\x13\xb7\x28\x4c\x38\x82\x9b\x39\xd7\x40\x10\xc0\x35\x54\x1a\xd5\xeb\x25\xd7\x7c\x96\xe3\x10\x58\x9a\x42\xc1\xc4\x1a\x12\x59\x14\x28\x8c\x06\xbc\x2b\x73\xc6\x05\x17\xb7\x04\x35\x97\x2b\xe0\x06\x56\x52\x2d\x74\xe4\x79\x59\x25\x12\xe0\x82\x9b\x20\x84\x8d\x37\xa0\xc3\x44\xbf\x30\x91\xe6\xf8\xae\x12\x49\xe0\xc7\x29\x16\xd2\xea\x14\xcd\xaa\x64\x81\x26\xf6\x87\x40\xaf\x27\xf6\xed\x84\x69\x74\xcb\x55\xf8\xa4\xdd\x39\xd7\xa6\x83\x70\xc9\xb5\x39\x0a\x61\xc9\x71\xd5\x41\xf8\x8d\xe3\xea\x28\x84\x95\xe2\x06\x3b\x10\xbf\xd3\xc8\x0e\x63\xeb\x79\x4b\xa6\xc0\xad\xfe\xfc\xe9\x12\xb4\x51\x64\xbd\xfd\x20\xfc\x68\xf1\xdc\xe6\xd6\xf8\xb9\x52\x60\x63\xe7\xc0\xb0\x3d\x4e\x3c\xb9\xbc\x3a\xf9\x72\xf2\xf9\xf4\xfd\xf9\xcd\x17\x2b\x65\x2e\xab\x3c\x85\x19\x02\x17\x80\x2c\x99\xc3\x8c\xcb\x02\xff\xae\x21\x91\x22\xe3\xb7\xa0\xab\x64\x6e\x91\xcc\x9c\x19\x72\x62\xc2\x04\x2d\x57\xc8\x52\x98\xa3\xc2\xc8\x1b\xec\x95\x9e\x80\xd4\xd1\xcf\x68\x50\x2c\x03\xff\x9e\x2c\x3f\xf4\x06\x3c\x6b\x9d\x70\x32\x01\xdf\x27\x3d\x3b\x00\x7e\x81\xc5\x28\x8e\x7d\x6f\xb0\x6d\x90\x87\xad\x93\x4e\xac\x05\xa3\xab\x12\x85\xb3\x44\x50\x53\x28\x3a\x61\xc9\xe2\x56\xc9\x4a\xa4\x41\x38\xdc\x8b\xb1\xa6\x7d\x28\x9c\xb9\x86\x52\xa1\x31\x6b\x50\x6c\x05\xbf\xdc\xfc\x7a\x19\xc1\xb5\x33\xc9\x0a\x61\xce\x96\x08\xcc\x06\xb5\x14\xa0\xcd\x3a\x47\xd0\x73\x44\x13\xa3\x49\x22\xc8\xa4\x02\xf2\xb3\x7e\xe3\x79\x66\x5d\xe2\xbd\x10\x3d\x63\x86\x91\x17\xab\xc4\xd0\x21\x5b\x3e\x1d\xec\x5d\xb6\x3d\xd8\x4a\xb1\xd9\xb3\xb5\xf9\xb5\x21\x9a\x9f\x83\x1a\xd0\xce\xab\xd9\x37\x4c\x8c\x86\x3f\xfe\x74\xd1\xb2\x1f\xeb\x11\x45\x41\xfc\x3c\x51\xef\x71\x7d\xb0\xec\x68\xf1\x96\x00\x8f\xc8\xef\xd7\xa0\x57\x87\xfd\x52\x0b\x7a\x4a\x21\x41\x69\xa8\x33\x7a\x5d\x25\x09\x6a\x0d\x30\x93\x32\x27\x7d\x12\x29\xb4\x4d\xc3\x7b\x9d\x6e\xea\x74\xfb\x51\x61\xc6\xef\x60\x02\x5f\xbd\xf1\xab\xb3\xab\xd3\x9b\xff\x7c\x3c\x07\x4a\xc8\x53\x6f\xdc\xfc\x43\x96\x4e\x3d\x80\x71\x81\x86\x41\x32\x67\x4a\xa3\x99\xf8\x9f\x6f\xde\xbd\xfe\x97\x6f\x27\x0c\x37\x39\x4e\x5b\xac\xb5\xe1\x32\x8e\xdd\xb8\x37\x8e\x1d\xc4\x78\x26\xd3\xb5\xdd\x50\xd2\x5f\x70\xa1\x59\xd2\x7d\x41\xeb\x85\x36\x8a\x19\xd4\x60\xe6\x48\x79\x17\x64\x06\x0c\x7e\x96\x70\x7a\xf6\x1e\x5a\xe0\x11\x21\xc4\x65\x1b\xe8\xc2\x50\x84\x27\x95\x52\x28\x4c\xbe\x86\x4a\x73\x71\x0b\xac\xbd\x0b\x66\x4c\x63\x0a\x52\x58\x78\x32\xbf\xbf\xd9\x40\x44\x0f\xdb\xad\x3f\x84\xd5\x9c\x27\x73\x0b\x56\x13\xdf\xe5\x85\x4a\x61\x0a\x4b\xce\xec\x2e\x14\x4b\xae\xa4\xa0\xcc\x0f\x4b\xa6\x38\x9b\xe5\x08\x07\xf4\xef\xd1\xef\x1a\x11\xc6\x0c\xe6\x0a\xb3\x89\x4f\x49\x54\x8f\xe2\xb8\x7d\x2f\x25\x52\x24\x58\x1a\x1d\x57\x2a\xd7\xb1\x3f\xa5\x84\x33\x8e\xd9\xd4\x72\xaf\x90\x0a\x2d\x0c\x17\x99\x54\x05\x33\x5c\x0a\x60\x33\x59\x19\x3a\x87\xa6\x8c\x56\x5b\xe9\xed\xc7\x0b\xdd\x16\x5f\xe5\x4e\xfe\x38\xe7\xd3\x9d\xfc\xc8\xdd\x13\x53\x8a\x59\x2b\x83\x8e\x96\x34\x91\x24\x33\xfb\xee\xd2\xca\x38\xce\x79\x2f\x82\xbd\x27\xa6\xc4\xab\x5e\x04\x06\xba\xc4\x84\x67\x3c\xb1\x2e\x20\x0d\x9f\x00\xea\xae\x8e\xa9\x8d\x61\x0b\xcb\x40\xe0\xaa\x41\x30\xf2\x00\x63\x1c\xd3\x01\x37\x1b\x9e\x41\x74\xae\xd4\x76\xeb\x4c\x3e\xd6\x46\x49\x71\x3b\xdd\x6c\xdc\xe8\x38\xae\x07\xac\x59\x36\x1b\x14\xe9\x76\xfb\xd5\xeb\xa3\xc3\x75\x95\xed\xe8\x10\xbb\x70\x1d\xc7\x96\x07\xb4\x3e\x8e\xe1\x42\x94\x95\x19\xb9\x2b\xaa\x9b\x02\xa3\x36\x1e\x0d\x36\x98\x75\x2a\xef\xe5\xdd\x3f\x7a\xa6\x9c\x0e\x0f\x89\x6b\xd2\x66\x47\x1c\x0d\x3e\x4d\xdc\x57\x0f\x60\xb3\x51\x74\x3b\x40\x2b\x6b\x69\x6b\x3b\x80\x71\xca\x97\xce\x37\xb4\x8c\xec\x7a\xa1\xcf\xb8\xaa\x67\xed\x8a\x6e\x18\xbd\x29\x2d\xf2\x84\xb8\x44\x89\x6a\xbb\xf5\xa7\xfb\x67\xf2\xe2\x0e\x0d\x73\x8d\xfd\x40\x14\x4d\x6f\x16\xb8\x7e\x12\x0a\x39\xcf\xe9\x1a\xd7\xca\x36\x1e\x7d\x86\x35\x9b\x9b\xa1\x63\x4d\x1a\x3c\xc6\x9a\x64\xa6\x1e\x53\x12\x57\xeb\x38\x2f\xa7\xe3\x9c\xcd\x30\x6f\x8e\x71\x3a\x97\x52\x63\x9d\xa0\xc0\x48\x20\x0b\x8c\xea\xc9\xb1\xc6\x1c\x13\x03\x82\x15\x38\xf1\x17\xb8\xf6\xa7\x3b\xa3\x3d\xe2\xba\x7a\xb3\x2c\x6d\x7a\x58\xb2\xbc\xc2\x89\xbf\xd9\x90\x0d\x9d\x39\xdd\xd3\x38\x76\x2b\xda\x98\x7b\x9b\x92\x55\x9d\xf8\x5a\xf3\xd8\xe9\x5d\x27\x14\x80\x31\x27\x1b\x02\xdd\x70\x13\x5f\x57\xb3\x82\x1b\xbf\x59\xda\x1c\xf8\x05\xfe\xd8\x5d\x95\x1d\x87\xd8\xd1\x63\x3d\xd2\xbe\x0a\xeb\xd3\xfd\xae\xa4\x41\xe0\xe6\x95\x77\x2f\x1e\x1f\xf3\xd5\x09\xb9\x68\x81\x6b\x72\x93\xcd\x50\xf4\x10\x50\x13\x50\x2a\x5c\x72\x59\x69\xe7\xc5\x15\xcf\x73\xba\x37\xe4\x12\x15\xad\x33\x28\xc2\x9d\x4b\x67\x2a\x6e\xf0\x3a\x16\xb4\x3d\x51\xcb\xd3\x7b\xbf\xed\x89\xf0\x80\x23\xee\xeb\x69\x0b\x8c\x46\xc7\x5e\xc1\x24\x8c\x29\x64\xb5\xbc\x26\x61\xfb\xa0\xe4\x4a\x4f\xfc\x7f\xfa\x90\xc8\x9c\x1e\x7e\x72\xec\xeb\x96\x18\x14\x3a\x0d\xc2\x11\xc1\xd1\x9c\xc8\x82\xc1\x85\x79\xf5\xac\x70\x09\x5d\xd7\x10\x1c\xe4\xd8\xa2\xcc\x01\x26\xd0\x74\x8f\xd1\xaf\x95\x36\xc1\xee\xed\x03\xae\x02\xff\x7e\x11\xe0\x87\xd1\x47\xaa\x61\x82\xfe\x74\x1d\x86\x07\x99\xf5\x48\x21\xf6\x7a\x3d\x14\xd2\x4e\xd2\x5d\x21\x36\xe1\x1c\x29\xc4\xde\xc0\x87\x42\xda\xb9\xab\x2b\xc4\x91\x88\xa4\x3c\x5d\x88\xbb\x91\x0f\xa5\x74\x08\x19\x86\xe4\x1e\xdb\x92\xf5\xf6\xae\xc1\x0a\x6c\xdf\xf8\x09\x75\x29\x85\x46\xbb\x59\x0d\x41\xe1\x77\xf8\xb1\x9e\xf9\x5e\xa1\x36\xb6\x97\x73\x21\x34\x9a\xc0\x0f\x87\x57\xec\xe6\xf3\xa7\xcb\xd1\xbe\xe3\xd9\xda\x3e\x0b\x95\xa2\xe5\x87\x71\x11\x9d\xdf\x61\x52\x19\x0c\x56\x43\xb0\xa8\xe1\xbf\xed\xe2\x57\x13\x10\x3c\xb7\xfd\x98\x95\x7e\x4e\x65\x36\x2d\x42\xa5\xea\x97\x70\xe8\x54\xbe\x36\xcc\x54\xfa\x42\x18\x54\x82\xe5\xd7\xa8\x96\xa8\xec\x8a\x90\xba\x36\xd7\x6f\xf5\x76\xdb\x36\x06\x5c\x25\xcb\x0d\x16\xb6\x46\x63\xd0\x74\x79\xa5\xd4\x9a\xcf\xa8\x4e\x15\x29\x2a\x60\xe0\xbb\x5b\xd4\x27\xbc\xef\x15\xaa\x35\x94\x4c\xb1\x02\x0d\xaa\x08\xce\xa9\x5b\x25\x3c\x4c\x21\xe5\x0a\x13\x23\xd5\x9a\xea\x5d\x06\x39\x17\x0b\xe2\x3c\xcd\xba\xc6\x75\xb7\x60\x48\x58\x4c\xa4\xae\xd9\x15\x52\xbc\x7e\x60\x2f\x05\x92\xdb\x9b\xf1\x1c\xa3\xfb\x8e\x6c\x1d\xea\xe5\x8e\x6c\x8a\x97\x43\x47\xa6\x98\xa1\x02\x92\xed\x5a\xfa\x5e\xcf\x36\x64\x7c\x82\x67\x5f\xe4\x5a\xea\xc8\xb7\x41\xe8\xb5\xfa\xf8\xf3\x2e\xbc\x95\x1a\xd5\x7d\x7a\xb3\xc0\x1b\x0c\x14\x9a\x4a\x09\xdb\xd2\xcb\xd2\xe8\xdd\xf1\xdd\x7d\x6d\x2f\x5e\x4d\xfb\xcf\x30\xe7\x05\x59\x6f\x04\x7e\xec\x0f\xbd\xc1\xc0\xdd\x60\x23\x4a\x8d\x0a\xbf\x47\xef\xa4\x2a\x7e\xa3\xcc\x19\x34\xb1\x11\x0e\x2d\x2c\x6d\xb2\x56\x71\xbd\x10\xe1\x06\x24\x2a\xf4\x06\xd4\x2b\x10\xb8\x9c\x7d\x1b\x36\xc6\xa3\xe5\xd1\x07\xbc\x33\x01\xa1\x9e\xba\x4f\x08\x01\x65\x86\xc6\xc2\x93\x09\x70\x19\x9d\x5f\xbd\x73\x76\x9b\x29\x64\x0b\x67\x82\x66\x45\xdb\xac\xed\x83\x67\x85\x71\x46\xcd\x02\xff\x1d\xe3\x39\xa6\x14\x4f\x24\x91\xb9\x5b\x52\xe0\x9d\xe9\xf4\x60\x0b\x5c\x8f\xe0\x6f\x4b\xdf\xaa\x47\x3a\xec\x0c\xe6\xe4\x59\xf0\x76\x7f\x3d\x01\x56\x96\x28\xd2\xe0\x60\x6a\x08\x72\xf6\x2d\x74\x26\xc9\x20\x47\x71\xb8\x24\xa4\xb3\xfd\x74\xe0\x2f\xf7\xfd\xd1\x25\x3b\x21\xad\x7e\x96\x9f\xce\xa2\x7e\x43\xed\x7b\x3c\x68\x7d\x08\x7b\x39\x0f\x9a\xb2\x93\x54\xeb\x52\x81\x42\xe1\x3d\x59\xe9\x5e\x10\x50\x71\x50\x47\x80\x5e\xf0\x72\x57\x0c\x8d\x26\x90\xb1\x5c\x63\x3f\x83\x5e\x75\xd6\x3a\x07\xf6\xf0\xaa\xb9\x7f\x9e\xc2\xab\x97\x11\xcb\xba\xf9\x7f\xc1\x2e\x9e\x39\x0d\x6d\x95\xb4\xff\xc0\x16\xc7\xf0\x41\xda\x6a\xcd\x55\xb1\x98\x46\xf0\x09\xeb\x2c\x4b\x05\x07\xac\xb8\x99\x03\x83\x54\xc9\x32\x95\x2b\x41\x61\x9a\xb8\x6a\x5c\x0a\x8c\x48\x78\x0f\xc1\x04\xcf\x49\xfb\x86\x60\x4f\x65\xd8\x03\x14\xdb\x71\xcc\x5a\xa3\x8f\x65\x0f\xd2\x2c\x7b\x26\xcd\xf6\x3c\xab\x65\x3e\x83\x69\x4d\x4a\xf8\x2b\xae\x1d\x49\x36\x1b\x0e\x40\xc5\x78\xe3\xc1\xb7\xd6\x81\x2b\xa6\xa1\x54\x72\xc9\x53\x72\xe2\x99\x5c\x89\x5c\xb2\xd4\x7d\x03\xa0\x7a\x9b\x9c\x61\xaf\xad\x05\xae\xc9\x6f\x9d\x50\x9f\x80\x51\x15\xda\x90\x61\x29\x71\xb3\x89\x79\xe7\xd4\x0f\xb8\xfa\x64\x27\xba\x3e\x1b\xee\x63\x6a\x08\xb5\xcf\x8f\xc8\x81\x7b\xe7\x24\x0a\x49\x0b\x27\xe3\xb1\x8c\xe7\x48\xeb\x94\x8c\x4e\x73\xa9\x31\xb0\x42\x65\x74\x2a\xcb\x35\x11\xcc\xcd\x85\xce\x32\xf7\xbf\xed\x9e\x4a\xa1\x39\x05\xb7\x46\x63\xb8\xb8\x85\xba\x5a\x7f\x7d\xb3\x2e\x71\xb8\x7b\xbb\x44\x71\x6b\xe6\x30\xb7\x50\x3a\xea\x4f\x70\xed\xcf\xf4\x2f\xcf\x70\xbb\x46\x6e\x97\xe2\xf6\xbf\xc3\x64\xb7\xff\x3d\x90\xf6\xba\x9f\x3b\x0f\xb2\xe3\xae\x95\xa9\x53\xe4\x93\xaa\x89\x5d\x41\xfc\x7f\x51\x4e\xf4\x24\xbc\x1f\x7e\xa8\x87\xba\x8d\xda\x3e\x1b\xfe\x75\xbe\x7c\x88\xaa\x48\x07\x01\x66\xeb\x46\x2c\x4a\xb3\xbe\xdf\x01\x5b\xe6\xf6\xe1\x3f\xa4\xcb\xe3\x92\xb4\x2c\x76\x5f\x10\x77\x62\x7a\x64\x74\x69\x6c\x65\xbd\xcd\xf3\x47\x58\xfc\xc7\x9f\xb3\xb5\xc1\xa0\x47\xb7\xd0\x51\xfc\xc0\xd5\x0f\xb1\xdb\x9d\xdc\x71\xbc\x43\xe9\x56\xf2\x6a\x89\x69\x3e\xc2\x37\x99\x88\x28\xf7\xdf\x00\x00\x00\xff\xff\x17\x5e\x00\xa7\x1e\x1d\x00\x00"),
		},
		"/demo/secrets.keeper": &vfsgen۰DirInfo{
			name:    "secrets.keeper",
			modTime: time.Time{},
		},
		"/demo/secrets.keeper/demo_secrets_keeper.go": &vfsgen۰CompressedFileInfo{
			name:             "demo_secrets_keeper.go",
			modTime:          time.Time{},
			uncompressedSize: 5518,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x6f\x73\xe3\xb6\xd1\x7f\x2d\x7e\x8a\x3d\xce\x3c\x19\x32\xd1\x91\xc9\xcc\x25\x4f\xe3\x8a\xca\x5c\x6c\xf9\xea\xb9\x6b\xec\x58\xbe\x76\x3a\x9d\xce\x1d\x44\x2e\x2d\xc4\x24\xc0\x00\xa0\x64\xc7\xc3\xef\xde\x59\x00\xa4\x25\x59\xf6\x9c\xda\xcb\xb4\xf5\x0b\x5b\x02\xb0\xff\x7e\xbb\xbf\x05\xd6\x0d\xcb\x6f\xd8\x35\x42\xcd\xb8\x08\x02\x5e\x37\x52\x19\x88\x82\x51\x98\x4b\x61\xf0\xd6\x84\xc1\x28\x44\x91\xcb\x82\x8b\xeb\x74\xc1\x34\x7e\xf7\x8a\x96\xca\xda\xee\x2c\x4d\x5d\xa5\x06\xeb\xa6\x62\x06\x69\x41\xa0\x49\x97\xc6\x34\xf4\x59\xea\x30\x08\x46\xe1\xb5\xcc\x2b\xd9\x16\x49\x81\xab\x54\x63\xae\xd0\xe8\x30\x18\x7d\x80\x7d\x1b\x69\x25\x73\x56\x0d\xa7\xe2\x20\x48\x53\xb8\x3a\x3f\x39\x8f\xd4\x8a\x89\x6b\x14\x26\x3e\x82\xab\x25\xd7\x50\xf2\x0a\x81\x6b\x68\x35\xaa\x97\x2b\xae\xf9\xa2\xc2\x31\xb0\xa2\x80\x9a\x89\x3b\xc8\x65\x5d\xa3\x30\x1a\xf0\xb6\xa9\x18\x17\x5c\x5c\x93\xaa\xa5\x5c\x03\x37\xb0\x96\xea\x46\x27\x41\x50\xb6\x22\x07\x2e\xb8\x89\x62\xb8\x0f\x46\xe4\x78\xf2\x27\x26\x8a\x0a\x4f\x5b\x91\x47\x61\x5a\x60\x2d\x7b\xdf\x92\x1b\xc4\x06\x55\x1a\x8e\xc1\xaf\xbc\xb5\x0b\x33\x91\xab\xbb\xc6\x38\x39\x15\x7f\xaa\x1a\x74\x62\x9f\x49\x5b\x81\x7b\xb5\x9d\xe0\xb6\xb6\x2e\x08\x56\x4c\x81\x13\x7a\x7f\xf9\x0e\xb4\x51\x04\xcd\xc3\x22\x7c\xd9\x6b\x76\x1a\x36\xb6\x66\x4a\x01\x2a\x25\xd5\x23\xe0\x1e\xf4\x65\x20\x75\xf2\x06\x0d\x8a\x55\x14\xce\x67\xc7\x97\xb3\xab\xf9\x87\xb7\xb3\xd9\xc5\xec\xf2\xc3\xfb\xcb\x77\x61\x1c\x8c\x78\xb9\x61\x3f\xcb\x20\x0c\x49\xc5\x68\x4f\xa2\x2f\xb1\x96\x2b\x84\x02\x4b\xd6\x56\x06\xa8\xc6\x54\x12\x8c\xb6\xcc\x85\xae\x26\x6f\xf0\xee\x28\x4d\x75\xfd\x66\xf1\x4b\xfd\xff\xdf\xfc\x74\x5b\x7c\x73\x76\xfd\xed\xe9\xfc\xeb\xf5\x2f\xdf\xcf\xab\xc5\x6f\xaf\xcf\x94\x90\xd5\xf1\x6f\xdf\x2f\x7e\xfe\xf9\xbb\xf6\xf5\xb2\x7a\x95\x85\xc1\xa8\xeb\x3d\x1f\x6f\x44\x98\xf5\x08\x26\xe7\x0d\x0a\x07\x42\xe4\xc9\x90\xfc\xc8\xf2\x9b\x6b\x25\x5b\x51\x44\xf1\xf8\x21\x0c\x0b\xac\xb9\x6b\x70\x07\x7d\x66\x18\x21\xdc\xe6\x86\x42\xdc\xc0\x7b\xb4\x81\xe5\xe8\x4c\x00\xfd\xb8\x2d\x48\x53\x5b\xd3\xc0\x45\xd3\x9a\x60\x74\xde\x9a\xed\x4d\xd9\x1a\xbb\xf1\xa3\x8d\x1b\x16\x52\x56\x64\x3d\x97\x42\x5b\xe2\x6e\x79\x70\xe5\xa9\x79\xa1\xb0\xe4\xb7\x90\xc1\xc7\x60\xf2\xe2\xe4\xfc\xf8\xea\x6f\x17\x33\x20\xf2\x4e\x83\x49\xff\x07\x59\x31\x0d\x00\x26\x35\x1a\x06\xf9\x92\x29\x8d\x26\x0b\xdf\x5f\x9d\xbe\xfc\x43\x68\x37\x0c\x37\x15\x4e\xb7\xcb\x03\xa8\x18\x27\xa9\xdb\x0a\x26\xa9\xd3\x32\x59\xc8\xe2\xce\xca\x34\xf4\x1b\x1c\x65\x1b\xea\x33\x74\x5e\x68\xa3\x98\x41\x0d\x66\x89\x14\x2c\xc8\x12\x18\xbc\x91\x70\x7c\xf2\x16\xb6\xf5\x27\xa4\x24\x6d\x36\x75\x9d\x19\xe2\x7d\xde\x2a\x85\xc2\x54\x77\xd0\x6a\x42\x86\xed\x08\x02\xd5\x45\x01\x52\x58\x23\x04\x7d\x78\x7f\x0f\x09\x7d\xe8\xba\x70\x0c\xeb\x25\xcf\x97\x56\x5f\xce\x04\x2c\x10\x72\x29\x4a\x7e\xdd\x2a\x2c\x60\xc5\x99\x95\x42\xb1\xe2\x4a\x0a\x6a\x24\xb0\x62\x8a\xb3\x45\x85\xb0\xaf\xaa\xf7\x78\x39\x47\x84\x09\x83\xa5\xc2\x32\x0b\x89\xc3\xfa\x28\x4d\x37\x3b\x5e\x2e\x45\x8e\x8d\xd1\x69\xab\x2a\x9d\x86\xd3\x25\x2a\x9c\xa4\x6c\x0a\xa5\x54\x50\x4b\x85\x56\x0d\x17\xa5\x54\x35\x33\x5c\x0a\x60\x0b\xd9\x1a\x0a\x45\x03\x17\x3d\x5c\xaf\x2f\xce\xf4\xa6\xf9\xb6\x72\xf6\x27\x15\x9f\x0e\xf6\x93\xa1\xdb\x4c\x7d\x7f\xb1\x96\x1c\x72\x14\xa9\xc3\x6c\x92\x56\x7c\xaf\x74\xdf\x5d\xa6\xbe\x9f\x3c\x2b\x3d\x49\x9d\x0f\xf7\xf7\xbc\x84\x64\xa6\x54\xd7\x39\x9d\xcd\x74\xa2\x8d\x92\xe2\x7a\x4a\x99\x20\x06\x74\xdd\x24\xf5\x4b\xde\xff\xfb\x7b\x14\x45\xd7\x7d\x0c\x9e\x28\xe4\x79\x5b\x0e\x85\x9c\xba\x2a\x9b\xa4\xb6\x82\x49\x24\x4d\xe1\x8c\x68\x73\x34\x74\xb1\x07\x22\x26\x3b\x1a\x3d\x10\xbd\xe2\x07\xde\xef\x65\xce\x57\xf0\x91\x42\xa3\x64\x4c\x87\x68\x2a\xb6\x40\x0f\x37\xc0\x4c\x18\x54\x60\x2f\x1b\x6a\x15\x50\x10\xf9\x8d\x04\x8f\xfc\x91\x3f\x36\x59\xa8\xb4\x17\x99\xd0\x41\xa6\x90\x81\x92\x6b\x9d\x85\xaf\x42\xc8\x65\xa5\xb3\xf0\xdb\xaf\x43\x10\xac\xc6\x2c\x1c\xf4\x85\x16\xb4\x33\x61\x31\xeb\xe5\xbc\x2b\xa9\x73\xc4\x43\x48\xd9\x73\xdf\x9b\xc1\x90\x6d\x26\x40\x1d\x2a\x0b\xf3\x25\xe6\x37\x0b\x79\xdb\x9b\xf0\x97\x3a\xac\x58\xd5\x62\x16\x1a\xd5\x62\xe8\x93\xe7\x7a\x4c\xd7\x59\x11\x2c\x7c\x72\x7a\xad\x57\x4b\x74\x51\xb2\x05\xb5\x69\xae\xc1\xa9\x02\xfb\x5e\xc0\xe2\x09\xe7\x36\x7d\xd1\xed\xa2\xe6\x66\xb0\xed\x73\xf2\xc2\xf5\x9b\xd4\xa1\x3d\x94\xd2\x79\x6b\x36\x4a\x69\x07\x7c\x2b\x88\x05\x28\xd4\x74\x57\x44\xdb\xae\xc4\x07\xc3\xaf\x90\x15\x52\x54\x77\x1e\x10\x8b\x3e\xf5\xe2\x4f\x81\xbf\xe0\xab\xc1\xc6\x23\x12\xfd\x90\xf3\x66\x89\x8a\x74\x64\x0f\x4a\xbf\x70\xfe\xda\x15\xdf\xd9\xbb\x6e\xe0\x1b\x70\x4b\x39\x6f\xce\xab\xef\xa9\x02\x5f\xed\xaf\x5c\x47\x95\x03\x59\xe1\x0d\x7e\x66\x56\xb8\xe0\x5e\xfa\x64\x0c\xd4\xf0\x88\xfc\x8b\xd4\x78\xc0\xf1\x20\x6e\xec\x7a\xf8\xfb\x70\x63\x4e\x2f\x4d\x5f\x8b\xdb\xd1\x1f\xce\x0a\x9f\x93\xc3\x59\xe1\x05\x07\x56\xfc\x17\x90\xc0\x77\xc3\x1f\x86\xbe\xb6\x97\x03\x03\xb8\xc3\x7d\xf5\xef\x30\x20\x76\x8f\xde\xdd\xb7\x51\x7f\x01\xd4\x4d\x05\x19\xf4\x43\x4c\xf2\xe7\x56\x9b\x68\xf8\xf6\x13\xae\xa3\x70\xe7\x65\xd1\xdf\xa5\x71\x72\x41\x8f\xa4\xe8\xb9\x6b\x25\x8e\x9f\x20\xd8\xc1\x56\xfb\x3b\x78\xaf\xd5\x1d\xda\xc6\xb1\x1f\x9d\x9e\x19\x2d\x80\x55\x95\x5c\x0f\x6f\x30\xe5\xee\x2a\x62\xab\x96\x35\x0e\x1c\x5d\x60\x1f\x2f\x16\x89\x7b\xf7\x3f\xa3\x34\x5a\x83\x9d\x57\x2e\x51\x37\x52\x68\xfc\xab\xe2\x86\x9e\xd7\x0a\x7f\x85\x2f\xfd\xce\xaf\x2d\x6a\x63\xc7\x06\x57\xf3\x47\x19\x7c\xf1\xa8\x2f\xd1\x44\xf0\xfe\xf2\xdd\x11\xe5\x7b\x78\x66\x8f\x83\xd1\xe8\x4c\xd8\x35\xd2\x98\x9c\x4a\x55\xff\x85\x38\x12\x6d\xdc\x93\x31\x9d\x72\xf5\x73\xb4\x7b\xca\xd3\x39\xb6\x63\x87\x2d\xe9\xb1\x9d\x02\x0a\x2c\x51\x01\x05\xe7\xe6\x19\x9a\x51\x50\x29\x72\xed\xa9\x92\x49\x66\xb7\x98\xb7\x06\xa3\xf5\xd8\x3d\xd5\xe3\x3f\x5a\x91\x17\x19\x08\x5e\x59\x25\x6e\x74\x9b\xd1\x2b\x9f\x4e\xa1\x52\xfe\x4b\x3c\x76\x28\xcd\x0d\x33\xad\x3e\x23\xd0\x05\xab\xe6\xa8\x56\x76\x04\x91\x34\xf6\x91\x5b\x5d\x14\x07\x1b\xf3\xd2\x6c\x5b\xbd\xb5\x9a\xb8\x91\x65\x38\x10\x8c\x46\x0a\x4d\xab\x84\x8d\x8b\x97\xce\x37\xea\x8d\x2f\x86\x49\x8b\xc8\xc0\x05\xfc\xfd\x1f\x8b\x3b\x83\x2e\x58\x77\xca\x5f\x3c\xd6\x77\x3a\x84\xc3\x90\x32\x22\x73\x36\x04\xc8\x7c\x3f\x4b\xe6\xa6\x98\xf9\x7f\x0c\x24\x27\x48\xbd\x6d\x6e\x87\x94\xa8\x37\x19\x5b\xb1\xf2\x11\x2c\x5b\x9e\x97\xb5\x71\xa8\x94\x51\x78\xb1\xfd\x78\x5a\x33\x0d\x42\xd2\xd3\xbb\xe2\x05\xf4\x29\xfd\xbf\x55\x68\x1d\xb1\xda\x87\x60\x2d\x5e\xa3\x0e\xb0\xd2\xe8\xac\x70\x01\x99\x8f\x71\xcb\x23\x3a\x37\x54\xf4\xb8\x4f\xb3\x03\x30\xf1\x09\x8e\xa8\x6e\x8e\xdd\xcc\x47\xd9\xe2\x56\x72\x4f\x28\x4f\x45\x72\xca\x78\x85\xc5\xe6\xf3\x6f\xdb\xef\xc1\xed\x6e\x48\x24\xf5\xc0\xbd\xd8\xda\x0f\x78\x25\x3d\xba\x83\xef\x31\xa5\xb8\x7b\x4c\xf3\xed\x99\xff\xd3\x69\x5e\xe0\x33\x34\xdf\x56\xfa\x1f\xa3\xf9\xc6\x9d\xff\x7b\xf2\x7c\xa3\x49\xff\x0f\xf3\xbc\x67\xec\xd1\x61\x94\x3d\xa0\xcc\x8f\x87\x74\x7c\x32\x63\xb7\x2a\x7f\x28\xb9\x5d\x1e\xfa\x04\x7c\x46\x1e\xf6\x6f\xcd\xe7\x78\xb8\xaf\x0f\x1e\x46\xce\x21\xa0\xf8\x51\x37\x7a\x50\xa3\xf7\x9d\x75\x64\xfe\x67\x00\x00\x00\xff\xff\x49\xb1\x98\x92\x8e\x15\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/demo"].(os.FileInfo),
	}
	fs["/demo"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/demo/blob.bucket"].(os.FileInfo),
		fs["/demo/secrets.keeper"].(os.FileInfo),
	}
	fs["/demo/blob.bucket"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/demo/blob.bucket/demo_blob_bucket.go"].(os.FileInfo),
	}
	fs["/demo/secrets.keeper"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/demo/secrets.keeper/demo_secrets_keeper.go"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
