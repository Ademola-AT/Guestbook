// Code generated by vfsgen; DO NOT EDIT.

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// static statically implements the virtual filesystem provided to vfsgen.
var static = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Time{},
		},
		"/demo": &vfsgen۰DirInfo{
			name:    "demo",
			modTime: time.Time{},
		},
		"/demo/blob.bucket": &vfsgen۰DirInfo{
			name:    "blob.bucket",
			modTime: time.Time{},
		},
		"/demo/blob.bucket/demo_blob_bucket.go": &vfsgen۰CompressedFileInfo{
			name:             "demo_blob_bucket.go",
			modTime:          time.Time{},
			uncompressedSize: 4722,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x7f\x6f\xe3\xb8\x11\xfd\xdb\xfa\x14\xb3\x02\xda\xca\x07\x47\xfa\xb7\x48\x6d\x07\x8d\x93\xdc\x05\x9b\x5b\x07\x1b\xef\x2d\x8a\x6e\xb1\x47\x4b\x23\x8b\xb5\x44\x6a\xc9\x91\x1d\x23\xc8\x77\x2f\x86\x94\x6d\xd9\x71\x16\x59\x14\x45\x0f\x48\x6c\x4b\x24\xdf\xfc\xe0\xbc\xc7\x61\x2d\xd2\xa5\x58\x20\x54\x42\xaa\x20\x90\x55\xad\x0d\x41\x14\xf4\xc2\x54\x2b\xc2\x47\x0a\x83\x5e\x98\x57\xee\xab\xa0\xaa\x4c\x08\xab\xba\x14\x84\xfc\x42\x6a\xfe\x54\x48\x49\x41\x54\xf3\x6f\x6d\xc3\x20\xe8\x85\x0b\x9d\x96\xba\xc9\xe2\x0c\x57\xc9\xbc\xd4\xf3\x30\xe8\x7d\x85\x17\x6f\x93\x5c\x96\xf8\x9d\xe1\x0a\x2b\x3f\xda\x0f\x82\x24\x81\xd9\xf4\x6a\x1a\x99\x95\x50\x0b\x54\xd4\x3f\x87\x59\x21\x2d\x30\x04\x48\x0b\x8d\x45\x73\xb6\x92\x56\xce\x4b\x1c\x80\xc8\x32\xa8\x84\xda\x40\xaa\xab\x0a\x15\x59\xc0\xc7\xba\x14\x52\x49\xb5\x60\xa8\x42\xaf\x41\x12\xac\xb5\x59\xda\x38\x08\xf2\x46\xa5\x20\x95\xa4\xa8\x0f\x4f\x41\x8f\x83\x89\x7f\x11\x2a\x2b\xf1\xa6\x51\x69\x14\x26\x19\x56\xda\xf9\x14\xcf\x9b\x74\x89\x94\x84\x03\xe0\xc7\x4b\xf7\x74\x29\x2c\xfa\xe9\xa6\xff\xa6\xd5\xa5\xb4\x74\x80\x70\x27\x2d\xfd\x10\xc2\x4a\xe2\xfa\x00\xe1\x37\x89\xeb\x1f\x42\x58\x1b\x49\x78\x00\xf1\x99\xdf\xec\x30\x9e\x83\x60\x25\x0c\xf8\xd9\x9f\x3e\xde\x81\x25\xc3\xd9\xdb\xbf\x84\x9f\x1c\x9e\x5f\xdc\x79\x7f\x6d\xcc\x76\xf2\x71\x66\x4f\xec\xe2\x67\xdd\x94\x19\xd8\x8d\x4a\xe3\xa9\x4a\x11\xe6\xfc\x47\x84\x06\xa8\x10\xaa\x5d\x7b\x01\x53\x03\x06\x53\x83\x82\x10\xa8\x40\x07\xd5\x31\x0f\x5a\x01\x8a\xb4\x00\x83\xdf\x1a\xb4\x74\x11\x9c\x34\x76\x79\x37\xbd\xfc\x7a\xf9\x69\xf2\xfe\x7a\xf6\xd5\xc5\x54\x38\xeb\x73\x04\xd9\xae\x9f\x4b\x5d\xe1\x5f\x2c\xa4\x5a\xe5\x72\x01\xb6\x49\x0b\x87\x44\x85\x20\x2e\x99\x54\x28\x9e\x6e\x50\x64\x50\xa0\xc1\x38\xe8\x71\xe4\x68\xdc\xbf\x36\x41\x6f\x9f\xb1\x11\x68\x1b\xff\x8c\x84\x6a\x15\x85\x47\xa6\xc3\x7e\xd0\x93\x79\x27\xbd\xa3\x11\x84\x21\xe7\xe8\x94\xdf\xae\xd4\xa5\x05\x01\x84\xc6\x70\x8d\x43\x86\xb9\x68\x4a\x1a\x80\xc1\x4a\xaf\x10\x34\x27\x2f\xf4\xbb\xca\x53\xb9\xb6\xa5\x5a\xc4\x41\xef\xc0\xa3\x90\x09\x73\x9e\x24\x09\x55\x4c\xd8\xe7\xad\xbf\x03\x17\xc2\xc8\xe7\x74\x5a\xa3\xf2\x79\x8d\x5a\x15\x88\x2f\x45\xba\x5c\x18\xdd\xa8\x2c\xea\x0f\xf6\x6e\xfb\x28\x78\xe9\xbb\x11\x28\x59\xba\x00\xf6\x65\x30\x82\xbc\xa2\xf8\xa1\x36\x52\x51\x1e\x85\x37\x42\x96\x98\x01\x69\xd0\x35\xaa\xee\xfe\x9d\xc3\x9f\x56\xa1\xf3\xa1\xcf\x4e\x3d\xbf\x4e\x78\x69\xa1\x36\x48\xb4\x01\x23\xd6\xf0\xcb\xec\xd7\xbb\x18\x1e\xfc\x36\xae\x11\x0a\xb1\x42\x10\x8e\xf6\x5a\x81\xa5\x4d\x89\x60\x0b\x44\x4a\x90\xd2\x18\x72\x6d\x80\x99\x60\x2f\x9c\x81\x5b\x55\x37\x74\x0e\x91\xaf\xd6\xfe\x41\x41\x7d\xfa\x78\x17\x07\xa9\x56\x96\x8e\x98\x3e\x6b\x05\x10\x46\xf0\x7b\x30\x7c\x77\x35\x9d\xcc\xfe\x71\x7f\x0d\x2c\x8e\xe3\x60\xb8\xfd\x42\x91\x8d\x03\x80\x61\x85\x24\x20\x2d\x84\xb1\x48\xa3\xf0\xd3\xec\xe6\xec\xaf\xa1\x1b\x20\x49\x25\x8e\xbb\x16\xd9\xb1\x61\xe2\xdf\x07\xc3\xc4\x43\x0c\xe7\x3a\xdb\xb8\x05\x35\x7f\x82\x4f\x42\xcd\x8a\xcd\xf3\x95\x25\x23\x08\x2d\x73\x82\x35\x10\x74\x0e\x02\x7e\xd6\x30\xb9\x7a\xdf\x0d\x27\x66\x84\xa4\xee\x02\xdd\x12\xe7\x32\x6d\x8c\x41\x45\xe5\x06\x1a\x2b\xd5\x02\xc4\x41\x12\xe6\xc2\x62\xc6\xdc\x62\x78\x2e\xa0\xf0\xe9\x09\x62\x78\x7e\x0e\x07\xb0\x2e\x64\x5a\x38\xa4\x96\x13\x9e\x32\x8d\xc1\x0c\x56\x52\xb8\x25\xa8\x56\xd2\x68\xc5\x12\x0c\x2b\x61\xa4\xe0\xca\x7d\x41\x85\x13\xce\x3d\x20\xc2\x50\x40\x61\x30\x1f\x85\xac\x66\xf6\x3c\x49\xba\x07\x44\xca\xf5\x5e\x93\x4d\x1a\x53\xda\x24\x1c\x33\x17\x87\x89\x18\xbb\x2d\xae\xb4\x41\x07\x23\x55\xae\x4d\x25\x48\x6a\x05\x62\xae\x1b\xb7\xad\x96\xc9\xde\xa6\xe8\xef\xf7\xb7\xb6\x6b\xbe\x29\xbd\xfd\x61\x29\xc7\x3b\xfb\xb1\x17\xec\x31\xab\xb4\xb3\xc1\xa1\x39\x62\xf0\xc9\xa2\x73\xf7\xec\x8b\x7e\x98\x94\xf2\x24\x82\x13\xec\x31\xab\xf4\x49\x04\x01\xb6\xc6\x54\xe6\x32\x75\xf9\x67\x0f\xdf\x00\xea\xd9\x3e\x76\xc2\xed\x60\x05\x28\x5c\x6f\x11\x48\x9f\xc0\x18\x26\x1c\xe2\x30\xf1\x65\x35\x4c\x7c\xbd\xfe\xde\x2a\xf5\xc9\x33\x2d\x5a\x83\x3b\x4f\x3e\xa2\xad\xb5\xb2\xe8\xcc\x19\x16\x9e\x6f\xf0\x53\x3b\xe2\x44\xd7\x49\x3c\x55\x75\x09\xe7\x23\xd8\xf6\x09\xf1\xaf\x8d\xa5\x68\xf7\xf4\x01\xd7\x51\xc8\x65\x15\xf6\xe3\x7b\x66\x45\x74\x9a\x5d\xfd\xbd\xb2\x30\x58\x55\x97\xf1\xf5\x23\xa6\x0d\x61\xb4\xee\xea\xcf\xdf\x8e\xc5\xc7\x39\x74\xcd\x52\xcc\x13\xd1\x98\xf6\xa1\x3f\xf0\x51\x3c\x90\xa0\xc6\xde\x2a\x42\xa3\x44\xf9\x80\x66\x85\xc6\xcd\xe8\x08\x4f\xab\x0b\xff\xfc\x97\x3f\xe1\x78\xdf\xa7\xf3\x7f\x63\x4a\x2f\x15\x81\xc7\xfe\x4f\x8a\xf0\xf4\x64\x58\x1a\x21\x7e\x7e\xf6\xc5\x91\xc9\x95\x2f\x13\x1e\x93\x39\xc4\xb7\xf6\x4a\x9a\x76\xd4\xcd\x38\xac\xe8\x8b\xda\x60\x2e\x1f\x47\xcc\xe9\xf7\xb8\x61\x5a\x8f\xf7\xbf\xb9\xa0\x76\x68\x58\x5a\x3c\x0d\xc4\x85\x7d\xb1\xc4\xcd\x9b\x50\x54\xb6\xf5\x35\x69\x9d\x3d\x80\x76\x11\x28\xed\xd2\xeb\x58\xba\xad\xdd\xfd\x64\x87\x70\xa2\x7c\xdb\x76\xe0\x45\x3b\x05\x1c\xa8\x97\x47\x49\x58\x39\x54\x01\xdb\x33\xaf\xd6\x96\x3b\xc6\x0d\x34\x2a\x43\x03\x02\x42\x9f\x92\x90\xf1\xbe\x35\x68\x36\x50\x0b\x23\x2a\x24\x34\x31\x5c\x73\x83\xc0\x78\x98\x41\x26\x0d\xa6\xa4\xcd\xc6\x1f\xcb\xa5\x54\x4b\x3e\xd7\x78\xd4\xf7\x0a\xbb\x09\x03\xc6\x12\x2a\xf3\xfd\x85\xd2\xea\xec\x95\xb5\x9c\x49\xbf\x96\xcf\xe8\xf8\x98\x91\x9d\xa0\x7e\x8c\x91\xbb\x36\xe3\xda\x33\xa5\x6d\x33\x0e\x89\xb2\x9b\xf1\x06\x9a\xf4\x0c\x52\x63\x94\xeb\x1e\x74\x4d\x96\x19\xfa\xe7\x3d\x53\x6a\x96\x5b\xcb\x26\xae\xb0\x94\x15\xbb\x76\x0e\x61\x12\x0e\x82\x5e\xef\xde\xa5\xf7\x9c\x37\xdb\xe0\xb7\xf8\x46\x9b\xea\x37\x51\x36\x18\x6d\x13\xdf\x1f\x38\x58\x5e\xc4\xb0\xde\x2d\x87\x1b\xb1\xa9\x7e\xd0\x4b\xe9\x91\x47\x78\xf9\xc4\x37\x27\x51\xdf\x37\x61\x7e\x83\x5f\xb2\x36\xe8\xf1\xa1\xc0\x0e\xf1\x8c\xc1\x56\x54\xd8\x46\xfc\x81\xd7\xa7\xf4\xc8\x61\xb5\x7a\x33\x1a\x81\xd4\xf1\xf5\xf4\xc6\x2d\xe9\xcd\x0d\x8a\x65\xd0\x63\xaf\x4e\xf4\x3a\x47\x69\x7c\xa5\xdd\x61\x53\xae\x73\xd5\xa0\xf0\x91\x0e\xce\xd8\x25\x6e\x3a\xdd\xcf\x5b\xd2\xbf\xcb\xbf\xf7\xc9\x45\x3d\x02\x51\xd7\xa8\xb2\xc8\x3d\x0e\x5c\x2e\x9c\xa2\xbd\x4d\x91\xdd\x01\xf7\x52\x91\xbb\xea\xf6\x7d\x45\x76\x66\xff\x07\x6a\x7c\x44\x82\xce\x35\xe7\x0f\x44\x82\x53\x37\x8d\x4d\xb7\x43\x6f\xd5\x85\x9b\x11\x58\x4b\x2a\x78\xd3\x41\x89\x0a\x21\x33\xba\x3e\xcb\xf4\x9a\x6f\x3a\x96\xf8\x56\xa1\x73\x07\xe8\x6e\x13\xdc\x91\xe9\x86\xe2\xa0\xc7\x0b\xda\xaa\xef\x90\x66\x89\x9b\xf6\x22\xc1\xe3\xa3\x57\xc2\x0a\xbf\xf0\xc4\x2f\xa1\x97\x1b\xbe\x21\x49\x6e\xd2\xf6\xca\x16\x1e\xc4\x7b\x29\xb2\x6d\xe6\x0e\xc2\x7c\x8d\x7a\x7c\x17\xe2\xc4\xb7\x95\xd1\x52\xf6\x03\xae\x3f\xba\x01\x66\xd7\x80\xfd\x1b\x70\x55\x9c\xbc\x30\xbc\x89\x43\xed\xe5\xcf\x83\x32\x63\xbe\xa8\x53\x9c\xf9\xa0\xe9\x86\xaf\x29\x47\x5b\x94\x61\x8e\x06\xbc\xab\xf1\xa4\xd4\x16\xd9\x75\xa9\xe3\x89\xae\x37\x6c\xd5\x0f\xf5\x4f\x6e\xe6\x44\x2b\x2b\x79\x0b\x2d\x12\xf1\x9e\x4c\x7c\xeb\x76\x36\xdb\xd4\x38\xd8\x3d\xdd\xa1\x5a\x50\x01\x85\x43\xb2\xf1\x89\xf2\xed\x5e\xb1\x7f\xac\x7e\xff\x8b\x12\xe3\xb3\xc7\xb5\x84\xdb\x86\x33\x76\x70\x9f\x0b\xf4\x4d\xa6\x5b\x22\x2d\xdc\x4f\x1f\x66\x98\x0d\xc0\x75\x95\xbe\x75\xec\xae\x82\xb6\x9f\x5c\xe2\x26\x0e\x8e\x2b\x6c\xa2\x2b\xce\x8b\xd5\x5a\xbd\x0b\x8f\xf7\xe3\xb6\xaa\x4b\xe4\x3b\x00\x66\xfd\xe0\x39\xf8\x4f\x00\x00\x00\xff\xff\xcc\xfe\x23\xfb\x72\x12\x00\x00"),
		},
		"/demo/secrets.keeper": &vfsgen۰DirInfo{
			name:    "secrets.keeper",
			modTime: time.Time{},
		},
		"/demo/secrets.keeper/demo_secrets_keeper.go": &vfsgen۰CompressedFileInfo{
			name:             "demo_secrets_keeper.go",
			modTime:          time.Time{},
			uncompressedSize: 5337,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x6d\x73\xdb\xc6\x11\xfe\x0c\xfc\x8a\x35\x66\x9a\x01\x12\x1a\x48\x66\x9c\xb4\x61\x09\x66\x1c\x89\x72\x39\x76\x23\x45\x94\xdb\xe9\x74\x3a\xf6\x11\x58\x90\x17\x01\x77\xc8\xdd\x81\x94\xa2\xc1\x7f\xef\xec\x1d\x00\x91\x14\xad\x5a\x4d\x5a\x4f\xfc\xc1\x02\xef\x65\x5f\x9e\x7b\x9e\xbd\xbd\x9a\x65\xd7\x6c\x85\x50\x31\x2e\x7c\x9f\x57\xb5\x54\x06\x42\xdf\x0b\x32\x29\x0c\xde\x98\xc0\xf7\x02\x14\x99\xcc\xb9\x58\x25\x4b\xa6\xf1\x9b\x17\x34\x54\x54\x76\x66\x6d\xaa\x32\x31\x58\xd5\x25\x33\x48\x03\x02\x4d\xb2\x36\xa6\xa6\x6f\xa9\x03\xdf\xf7\x82\x95\xcc\x4a\xd9\xe4\x71\x8e\x9b\x44\x63\xa6\xd0\xe8\xc0\xf7\xde\xc1\xb1\x89\xa4\x94\x19\x2b\x87\x55\x91\xef\x27\x09\x5c\x9d\x9f\x9e\x87\x6a\xc3\xc4\x0a\x85\x89\xc6\x70\xb5\xe6\x1a\x0a\x5e\x22\x70\x0d\x8d\x46\xf5\x7c\xc3\x35\x5f\x96\x38\x02\x96\xe7\x50\x31\x71\x0b\x99\xac\x2a\x14\x46\x03\xde\xd4\x25\xe3\x82\x8b\x15\x99\x5a\xcb\x2d\x70\x03\x5b\xa9\xae\x75\xec\xfb\x45\x23\x32\xe0\x82\x9b\x30\x82\x3b\xdf\xa3\xc0\xe3\xbf\x30\x91\x97\x78\xd6\x88\x2c\x0c\x92\x1c\x2b\xd9\xc7\x16\x5f\x23\xd6\xa8\x92\x60\x04\xdd\xc8\x6b\x3b\x30\x13\x99\xba\xad\x8d\xdb\xa7\xa2\x8f\x35\x83\x6e\xdb\x6f\x64\x2d\xc7\xa3\xd6\x4e\x71\xdf\x5a\xeb\xfb\x1b\xa6\xc0\x6d\x7a\x7b\xf9\x06\xb4\x51\x04\xcd\xfd\x20\x7c\xde\x5b\x76\x16\x76\xa6\x66\x4a\x01\x2a\x25\xd5\x03\xe0\xee\xed\xa5\x20\x75\xfc\x0a\x0d\x8a\x4d\x18\x2c\x66\x27\x97\xb3\xab\xc5\xbb\xd7\xb3\xd9\xc5\xec\xf2\xdd\xdb\xcb\x37\x41\xe4\x7b\xbc\xd8\xf1\x9f\xa6\x10\x04\x64\xc2\x3b\x72\xd0\x97\x58\xc9\x0d\x42\x8e\x05\x6b\x4a\x03\xc4\x31\x15\xfb\xde\x9e\xbb\xc0\x71\xf2\x1a\x6f\xc7\x49\xa2\xab\x57\xcb\x9f\xaa\x3f\x7e\xf5\xc3\x4d\xfe\xd5\x7c\xf5\xf5\xd9\xe2\xcb\xed\x4f\xdf\x2e\xca\xe5\x2f\x2f\xe7\x4a\xc8\xf2\xe4\x97\x6f\x97\x3f\xfe\xf8\x4d\xf3\x72\x5d\xbe\x48\x03\xdf\x6b\xfb\xc8\x47\x3b\x19\xa6\x3d\x82\xf1\x79\x8d\xc2\x81\x10\x76\x62\x88\xbf\x67\xd9\xf5\x4a\xc9\x46\xe4\x61\x34\xba\x4f\xc3\x02\x6b\x6e\x6b\x3c\x40\x9f\x19\x46\x08\x37\x99\xa1\x14\x77\xf0\xf6\x76\xb0\xf4\xe6\x02\xe8\x9f\x9b\x82\x24\xb1\x9c\x06\x2e\xea\xc6\xf8\xde\x79\x63\xf6\x27\x65\x63\xec\xc4\xf7\x36\x6f\x58\x4a\x59\x92\xf7\x4c\x0a\x6d\x85\xbb\x17\xc1\x55\x27\xcd\x0b\x85\x05\xbf\x81\x14\xde\xfb\x93\x67\xa7\xe7\x27\x57\xff\xb8\x98\x01\x89\x77\xea\x4f\xfa\x3f\xc8\xf2\xa9\x0f\x30\xa9\xd0\x30\xc8\xd6\x4c\x69\x34\x69\xf0\xf6\xea\xec\xf9\x9f\x02\x3b\x61\xb8\x29\x71\xba\x4f\x0f\x20\x32\x4e\x12\x37\xe5\x4f\x12\x67\x65\xb2\x94\xf9\xad\xdd\x53\xd3\xff\xe0\x24\x5b\x53\x9d\xa1\xf5\x42\x1b\xc5\x0c\x6a\x30\x6b\xa4\x64\x41\x16\xc0\xe0\x95\x84\x93\xd3\xd7\xb0\x6f\x3f\x26\x23\x49\xbd\x6b\x6b\x6e\x48\xf7\x59\xa3\x14\x0a\x53\xde\x42\xa3\x09\x19\x76\xb0\x11\x88\x17\x39\x48\x61\x9d\x10\xf4\xc1\xdd\x1d\xc4\xf4\xd1\xb6\xc1\x08\xb6\x6b\x9e\xad\xad\xbd\x8c\x09\x58\x22\x64\x52\x14\x7c\xd5\x28\xcc\x61\xc3\x99\xdd\x85\x62\xc3\x95\x14\x54\x48\x60\xc3\x14\x67\xcb\x12\xe1\x18\xab\x8f\x44\xb9\x40\x84\x09\x83\xb5\xc2\x22\x0d\x48\xc3\x7a\x9c\x24\xbb\x15\x2f\x93\x22\xc3\xda\xe8\xa4\x51\xa5\x4e\x82\xe9\x1a\x15\x4e\x12\x36\x85\x42\x2a\xa8\xa4\x42\x6b\x86\x8b\x42\xaa\x8a\x19\x2e\x05\xb0\xa5\x6c\x0c\xa5\xa2\x81\x8b\x1e\xae\x97\x17\x73\xbd\xeb\xbe\x29\x9d\xff\x49\xc9\xa7\x83\xff\x78\xa8\x36\xd3\xae\xbe\x58\x4f\x0e\x39\xca\xd4\x61\x36\x49\x4a\x7e\x74\x77\x5f\x5d\xa6\x5d\x3d\x79\x74\xf7\x24\x71\x31\xdc\xdd\xf1\x02\xe2\x99\x52\x6d\xeb\x6c\xd6\xd3\x89\x36\x4a\x8a\xd5\x94\x4e\x82\x14\xd0\xb6\x93\xa4\x1b\xea\xe2\xbf\xbb\x43\x91\xb7\xad\xff\xfe\x03\x44\x5e\x34\xc5\x40\xe4\xc4\xb1\x6c\x92\x38\x06\xbf\xf7\x7d\x2a\x22\x73\xd2\xcd\x78\x28\x63\xf7\x4a\x8c\x0f\x4c\x76\x48\xf4\x96\xef\x85\x7f\x54\x3a\x5f\xc0\x7b\xca\x8d\x4e\xc3\x41\x34\x13\x06\x15\xd8\xcb\x85\x4a\x03\xe4\x24\x76\x23\xa1\x43\x7a\xec\x72\x5e\xaa\xa4\x43\x94\x16\x31\x85\x0c\x94\xdc\xea\x34\x78\x11\x40\x26\x4b\x9d\x06\x5f\x7f\x19\x80\x60\x15\xa6\xc1\x60\x2b\xb0\x00\xcd\x85\xc5\xa7\xdf\x37\x3d\x34\x68\x0b\x04\x50\xd5\x49\x83\x6c\x8d\xd9\xf5\x52\xde\xf4\xa6\xba\x8b\x1a\x36\xac\x6c\x30\x0d\x8c\x6a\x30\xe8\x0e\xc4\xd5\x8d\xb6\xb5\x5b\x30\xef\x00\xef\x65\x8a\x2e\x0f\xb6\xa4\xc2\xcb\x35\x38\x43\x60\x3b\x00\xcc\x1f\x0b\x41\x37\xcb\x8a\x9b\xc1\x65\x87\xee\x33\x57\x3a\x92\x1e\x37\x17\xc3\x79\x63\x7a\x52\xe4\x7c\xd3\x73\x12\x73\x50\xa8\xa9\xd2\x87\xfb\x6e\xa3\xf1\x24\xa1\x75\xff\x19\x48\x85\x2c\x97\xa2\xbc\xed\x52\xb6\x38\x52\x05\x3d\x02\xe4\x60\x10\xe0\x21\xd3\xbf\xcb\x78\xbd\x46\x45\x5b\xd2\x7b\x1b\x9f\xb9\xb0\xec\x48\x57\x7e\xdb\x76\x10\x05\x70\xab\x0b\x67\xbd\x8f\x77\xe0\x33\x7c\x71\x9c\x5e\x8e\xd0\x4f\xa4\x6e\xe7\xf1\xd7\x51\xd7\x25\xf3\xbc\xc3\x78\xe0\x6f\x87\xc0\x7f\xc1\xdf\x7b\xcc\x3e\x19\x81\x17\xd4\xe0\x75\x24\xda\xcf\xef\x09\xd4\xed\xd0\xfd\x28\xea\x76\x6b\x07\xea\xfe\xff\x98\xda\xd5\x99\xef\x86\xaa\x71\x94\xa8\x03\x5a\x43\xe5\xff\x55\x34\x8d\x5c\xff\x78\xd8\x66\xf4\xa5\xb4\xaa\x4b\x48\xa1\x7f\x0f\xc4\x7f\x6d\xb4\x09\x87\x5f\x3f\xe0\x36\x0c\x0e\x2e\xe9\xfe\x5a\x8a\xe2\x0b\xea\x37\xc2\xc7\x0a\x74\x14\x7d\x40\x05\x4f\xf6\xda\x5f\x67\x47\xbd\x1e\x68\x2b\x8a\xba\x57\xc8\x23\x5d\x3a\xb0\xb2\x94\xdb\xa1\x9d\x51\xee\x1a\x20\x8d\x69\x59\xe1\xa0\xac\x25\xf6\xf9\x62\x1e\xbb\x16\xfa\x11\xa3\xe1\x16\x6c\xeb\x7f\x89\xba\x96\x42\xe3\xdf\x15\x37\xd4\xa9\x2a\xfc\x19\x3e\xef\x66\x7e\x6e\x50\x1b\xdb\x81\x3b\x3a\x8f\x53\xf8\xec\x41\xf1\xa0\xe6\xfa\xed\xe5\x9b\x31\x1d\xf8\xd0\xb1\x8e\x7c\xcf\x9b\x0b\x3b\x46\x16\xe3\x33\xa9\xaa\xbf\x11\xfd\xc3\x9d\x6b\x28\xa2\x55\x8e\x40\xe3\xc3\x55\x9d\x40\x23\xdb\xc1\x5b\x0a\x8f\x6c\x43\x9d\x63\x81\x0a\x28\x39\xf7\x34\xa0\x76\x1f\x95\xa2\xd0\x3e\x44\x99\x78\x76\x83\x59\x63\x30\xdc\x8e\x5c\xd7\x1b\xfd\xd9\x6e\x79\x96\x82\xe0\xa5\x35\xe2\x5e\x41\x33\x6a\x98\x69\x15\x2a\xd5\xfd\x88\x46\x0e\xa5\x85\x61\xa6\xd1\x73\x02\x5d\xb0\x72\x81\x6a\x63\xbb\x79\x49\x2f\x28\x0a\xab\x0d\x23\x7f\xe7\xe9\x31\xdb\x37\x6f\xbd\xc6\xae\xfb\x1f\x16\xf8\x9e\xa7\xd0\x34\x4a\xd8\xbc\x78\xe1\x62\xa3\xaa\xf6\x6c\x78\xb4\x90\x18\xb8\x80\x7f\xfe\x6b\x79\x6b\xd0\x25\xeb\x56\x75\xd7\x83\x8d\x9d\x16\xe1\xd0\xef\x7b\xe4\xce\xa6\x00\x69\x57\xa3\xe2\x85\xc9\x67\xdd\x1b\x3b\x3e\x45\xaa\x57\x0b\xdb\xef\x87\xbd\xcb\xc8\x6e\x2b\x1e\xc0\xb2\x17\x79\x51\x19\x87\x4a\x11\x06\x17\xfb\x7d\xc9\x96\x69\x10\x92\xba\xd8\x92\xe7\xd0\x1f\xe9\x1f\x36\x81\x0d\xc4\x5a\x1f\x92\xb5\x78\x79\x2d\x60\xa9\xd1\x79\xe1\x02\xd2\x2e\xc7\xbd\x88\x68\xdd\xc0\xe8\x51\x7f\xcc\x0e\xc0\xb8\x3b\xe0\x90\x78\x73\xe2\x9e\x4f\x74\x5a\xdc\xee\x3c\x92\xca\x87\x32\x39\x63\xbc\xc4\x7c\xb7\xb3\xda\x8f\x7b\x08\xbb\x1d\x0e\x92\x8a\xe0\x51\x6c\xed\x07\x5e\xc9\x0e\xdd\x21\xf6\x88\x8e\xb8\x7d\x28\xf3\xfd\xe7\xf3\xc7\xcb\x3c\xc7\x47\x64\xbe\x6f\xf4\x93\xc9\x7c\xe7\xb6\xfe\x5f\xea\x7c\xa7\x48\xff\x8e\x75\xde\x2b\x76\xfc\x34\xc9\x3e\x81\xe6\x27\xc3\x71\x7c\xb4\x62\xf7\x98\x3f\x50\xee\x50\x87\xdd\x01\xfc\x86\x3a\xec\x3b\xc4\xc7\x74\x78\xac\x0e\x3e\x4d\x9c\x43\x42\xd1\x83\x6a\x74\x6f\x46\x1f\x5b\xeb\xc4\xfc\xef\x00\x00\x00\xff\xff\x81\xb4\x01\x79\xd9\x14\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/demo"].(os.FileInfo),
	}
	fs["/demo"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/demo/blob.bucket"].(os.FileInfo),
		fs["/demo/secrets.keeper"].(os.FileInfo),
	}
	fs["/demo/blob.bucket"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/demo/blob.bucket/demo_blob_bucket.go"].(os.FileInfo),
	}
	fs["/demo/secrets.keeper"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/demo/secrets.keeper/demo_secrets_keeper.go"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
