// Code generated by vfsgen; DO NOT EDIT.

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// static statically implements the virtual filesystem provided to vfsgen.
var static = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Time{},
		},
		"/demo": &vfsgen۰DirInfo{
			name:    "demo",
			modTime: time.Time{},
		},
		"/demo/blob.bucket": &vfsgen۰DirInfo{
			name:    "blob.bucket",
			modTime: time.Time{},
		},
		"/demo/blob.bucket/demo_blob_bucket.go": &vfsgen۰CompressedFileInfo{
			name:             "demo_blob_bucket.go",
			modTime:          time.Time{},
			uncompressedSize: 7449,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\xdf\x73\xdb\x36\x12\x7e\x16\xff\x8a\x0d\x67\xae\x47\xf6\x14\xb2\x0f\xf7\x70\xa3\x93\xdc\xa9\x7f\xa4\xf5\xc4\x8d\x33\xb1\xd3\xce\x4d\xa7\x93\x40\xe4\xd2\x42\x44\x02\x0c\x00\x4a\xd6\x68\xf4\xbf\xdf\x2c\x40\x4a\xa4\x49\xb9\x76\x7c\x2f\xe7\x87\x84\x02\x81\x6f\x17\xbb\xfb\x7d\xc0\xb2\x64\xc9\x92\xdd\x21\x14\x8c\x0b\xcf\xe3\x45\x29\x95\x81\xc0\x1b\xf9\x89\x14\x06\xef\x8d\xef\x8d\x7c\x54\x4a\x2a\x4d\x4f\x59\x61\x07\x16\xa6\xc8\x63\x83\x45\x99\x33\x83\x34\xc0\x25\xfd\x2b\xd0\xc4\x0b\x63\x4a\x7a\x96\xda\xf7\xbc\x91\x7f\x27\x93\x5c\x56\x69\x94\xe2\x2a\x9e\xe7\x72\xee\x7b\xa3\x4f\xd0\x1b\x8d\x33\x9e\xe3\x23\xaf\x0b\x2c\xdc\xdb\xd0\xf3\xe2\x18\x6e\xaf\xcf\xaf\x03\xb5\x62\xe2\x0e\x85\x09\x27\x70\xbb\xe0\x1a\x08\x02\xb8\x86\x4a\xa3\x7a\xbd\xe2\x9a\xcf\x73\x1c\x03\x4b\x53\x28\x98\xd8\x40\x22\x8b\x02\x85\xd1\x80\xf7\x65\xce\xb8\xe0\xe2\x8e\xa0\x16\x72\x0d\xdc\xc0\x5a\xaa\xa5\x8e\x3c\x2f\xab\x44\x02\x5c\x70\x13\x84\xb0\xf5\x46\xb4\x99\xe8\x17\x26\xd2\x1c\xdf\x54\x22\x09\xfc\x38\xc5\x42\x5a\x9f\xa2\x79\x95\x2c\xd1\xc4\xfe\x18\xe8\xe7\xa9\xfd\x75\xca\x34\xba\xe9\x2a\x7c\xd2\xea\x9c\x6b\xd3\x41\xb8\xe2\xda\x3c\x0b\x61\xc5\x71\xdd\x41\xf8\x8d\xe3\xfa\x59\x08\x6b\xc5\x0d\x76\x20\x7e\xa7\x91\x3d\xc6\xce\xf3\x56\x4c\x81\x9b\xfd\xf1\xc3\x15\x68\xa3\x28\x7a\x87\x41\xf8\xde\xe2\xb9\xc5\xad\xf1\x0b\xa5\xc0\xd6\x4e\x2f\xb0\x03\x49\x3c\xbd\xba\x3e\xfd\x74\xfa\xf1\xec\xed\xc5\xed\x27\x6b\x65\x21\xab\x3c\x85\x39\x02\x17\x80\x2c\x59\xc0\x9c\xcb\x02\xff\xae\x21\x91\x22\xe3\x77\xa0\xab\x64\x61\x91\xcc\x82\x19\x4a\x62\xc2\x04\x4d\x57\xc8\x52\x58\xa0\xc2\xc8\x1b\x1d\x9c\x9e\x81\xd4\xd1\xcf\x68\x50\xac\x02\xff\x81\x2d\x3f\xf4\x46\x3c\x6b\xed\x70\x36\x03\xdf\x27\x3f\x3b\x00\x7e\x81\xc5\x24\x8e\x7d\x6f\xb4\x6b\x90\xc7\xad\x9d\xce\x6c\x04\xa3\xeb\x12\x85\x8b\x44\x50\x53\x28\x3a\x65\xc9\xf2\x4e\xc9\x4a\xa4\x41\x38\x3e\x98\xb1\xa1\x3d\x56\xce\x5c\x43\xa9\xd0\x98\x0d\x28\xb6\x86\x5f\x6e\x7f\xbd\x8a\xe0\xc6\x85\x64\x8d\xb0\x60\x2b\x04\x66\x8b\x5a\x0a\xd0\x66\x93\x23\xe8\x05\xa2\x89\xd1\x24\x11\x64\x52\x01\xe5\x59\xff\xe8\x79\x66\x53\xe2\x83\x12\x3d\x67\x86\x51\x16\xab\xc4\xd0\x26\x5b\x39\x1d\x1d\x52\xb6\xeb\x2d\xa5\xda\x1c\x58\xda\xfc\xb5\x21\x9a\x3f\x07\x35\xa2\x95\xd7\xf3\x2f\x98\x18\x0d\x7f\xfc\xe9\xaa\xe5\x30\x36\x60\x8a\x8a\xf8\xdb\x4c\xbd\xc5\x4d\x6f\xda\xb3\xcd\x5b\x02\x3c\x62\x7f\xd8\x83\x41\x1f\x0e\x53\x2d\xe8\x19\x95\x04\xc9\x50\x67\xf4\xa6\x4a\x12\xd4\x1a\x60\x2e\x65\x4e\xfe\x24\x52\x68\x2b\xc3\x07\x9f\x6e\x6b\xb9\x7d\xaf\x30\xe3\xf7\x30\x83\xcf\xde\xf4\xd5\xf9\xf5\xd9\xed\x7f\xde\x5f\x00\x09\xf2\x89\x37\x6d\xfe\x43\x96\x9e\x78\x00\xd3\x02\x0d\x83\x64\xc1\x94\x46\x33\xf3\x3f\xde\xbe\x79\xfd\x2f\xdf\xbe\x30\xdc\xe4\x78\xd2\x62\xad\x2d\x97\x69\xec\xc6\xbd\x69\xec\x20\xa6\x73\x99\x6e\xec\x82\x92\xfe\x05\x57\x9a\x25\x9d\x17\x34\x5f\x68\xa3\x98\x41\x0d\x66\x81\xa4\xbb\x20\x33\x60\xf0\xb3\x84\xb3\xf3\xb7\xd0\x02\x8f\x08\x21\x2e\xdb\x40\x97\x86\x2a\x3c\xa9\x94\x42\x61\xf2\x0d\x54\x9a\x8b\x3b\x60\xed\x55\x30\x67\x1a\x53\x90\xc2\xc2\x53\xf8\xfd\xed\x16\x22\x7a\xd8\xed\xfc\x31\xac\x17\x3c\x59\x58\xb0\x9a\xf8\x4e\x17\x2a\x85\x29\xac\x38\xb3\xab\x50\xac\xb8\x92\x82\x94\x1f\x56\x4c\x71\x36\xcf\x11\x7a\xf4\x1f\xf0\xef\x06\x11\xa6\x0c\x16\x0a\xb3\x99\x4f\x22\xaa\x27\x71\xdc\x3e\x97\x12\x29\x12\x2c\x8d\x8e\x2b\x95\xeb\xd8\x3f\x21\xc1\x99\xc6\xec\xc4\x72\xaf\x90\x0a\x2d\x0c\x17\x99\x54\x05\x33\x5c\x0a\x60\x73\x59\x19\xda\x87\x26\x45\xab\xa3\xf4\xd3\xfb\x4b\xdd\x36\x5f\xe5\xce\xfe\x34\xe7\x27\x7b\xfb\x91\x3b\x27\x4e\xa8\x66\xad\x0d\xda\x5a\xd2\x54\x92\xcc\xec\x6f\x27\x2b\xd3\x38\xe7\x83\x08\xf6\x9c\x38\x21\x5e\x0d\x22\x30\xd0\x25\x26\x3c\xe3\x89\x4d\x01\x79\xf8\x04\x50\x77\x74\x9c\xd8\x1a\xb6\xb0\x0c\x04\xae\x1b\x04\x23\x7b\x18\xd3\x98\x36\xb8\xdd\xf2\x0c\xa2\x0b\xa5\x76\x3b\x17\xf2\xa9\x36\x4a\x8a\xbb\x93\xed\xd6\x8d\x4e\xe3\x7a\xc0\x86\x65\xbb\x45\x91\xee\x76\x9f\xbd\x21\x3a\xdc\x54\xd9\x9e\x0e\xb1\x2b\xd7\x69\x6c\x79\x40\xf3\xe3\x18\x2e\x45\x59\x99\x89\x3b\xa2\xba\x12\x18\xb5\xf1\x68\xb0\xc1\xac\xa5\x7c\x90\x77\xff\x18\x78\xe5\x7c\x38\x66\xae\x91\xcd\x8e\x39\x1a\x7c\x9a\xb9\xcf\x1e\xc0\x76\xab\xe8\x74\x80\x96\x6a\x69\x1b\x3b\x80\x69\xca\x57\x2e\x37\x34\x8d\xe2\x7a\xa9\xcf\xb9\xaa\xdf\xda\x19\xdd\x32\xfa\xb1\xb4\xc8\x33\xe2\x12\x09\xd5\x6e\xe7\x9f\x1c\x9e\x29\x8b\x7b\x34\xcc\x35\x0e\x03\x51\x35\xfd\xb8\xc4\xcd\x93\x50\x28\x79\xce\xd7\xb8\x76\xb6\xc9\xe8\x37\x44\xb3\x39\x19\x3a\xd1\xa4\xc1\xe7\x44\x93\xc2\x34\x10\x4a\xe2\xaa\xf3\xfb\x6c\x21\xa5\xc6\x5a\x8f\xc0\x48\xa0\x0d\x4f\xdc\x2c\x8d\x39\x26\x06\x04\x2b\x70\xe6\x2f\x71\xe3\x43\xce\xe6\x98\xcf\xfc\x64\x68\x91\x7f\x08\xc4\xd1\x1c\x5a\x58\x59\x5a\x95\x58\xb1\xbc\xc2\x99\xbf\xdd\x52\x28\x5d\x54\xdd\xd3\x34\x76\x33\x86\x03\xeb\x9c\xaa\x49\x3a\x57\x71\xfd\xc4\x29\x7e\x40\xa7\xdb\xcc\xd7\xd5\xbc\xe0\xa6\xf6\x67\x1a\x37\x9b\x7d\x41\x2e\xf6\xc7\x64\x27\x19\x76\xf4\xb9\xd9\x68\x1f\x83\xf5\xa6\x7e\x57\xd2\x20\x70\xf3\xca\x7b\x50\x8b\xad\x3c\x9d\x52\xa4\x97\xb8\xa1\x68\x5b\x31\xa2\x87\x80\xee\xfb\xa5\xc2\x15\x97\x95\x76\xc9\x58\xf3\x3c\xa7\x23\x42\xae\x50\xd1\x3c\x83\x22\x9c\x3c\x16\x2c\xdb\xfa\x0c\xe4\x78\x3e\x60\xd0\x3f\x24\xed\x40\x86\x07\xe0\xf6\x32\xd1\xac\xe9\x59\x26\x6b\x4c\x21\xab\x0d\x36\xc2\xec\x83\x92\x6b\x3d\xf3\xff\xe9\x43\x22\x73\x7a\xf8\xe1\x50\x6c\x8d\x78\x37\xa0\x8e\x7f\xdd\x4b\x06\x55\x4d\x83\xfd\x94\xda\x68\x36\x62\x51\xe0\xd2\xbc\xfa\xa6\x6a\x09\x5d\xc3\x10\xf4\xe4\xb5\x28\x73\x80\x19\x34\x8d\x63\xf4\x6b\xa5\x4d\xb0\xff\xf5\x0e\xd7\x81\xff\xf0\xfc\xf7\xc3\xe8\x3d\x5d\x5f\x82\x61\xa5\x0e\xc3\x9e\xa8\x3e\xd3\x88\x3d\x59\xfb\x46\xda\xfa\xdc\x35\x62\xb5\xe6\x99\x46\xac\x10\xf4\x8d\xb4\x65\xab\x6b\xc4\x71\x88\xac\x3c\xdd\x88\xab\x82\xbe\x95\x0e\x1f\xc3\x90\xd2\x63\xbb\xb1\xc1\xb6\x35\x58\x83\x6d\x19\x3f\xa0\x2e\xa5\xd0\x68\x17\xab\x31\x28\xfc\x0a\xdf\xd7\x6f\xbe\x56\xa8\x8d\x6d\xe3\x5c\x09\x4d\x66\xf0\x5d\xff\x74\xdd\x7e\xfc\x70\x35\x39\x34\x3b\x3b\xdb\x62\xa1\x52\x34\xbd\x5f\x17\xd1\xc5\x3d\x26\x95\xc1\x60\x3d\x06\x8b\x1a\xfe\xdb\x4e\x7e\x35\x03\xc1\x73\xdb\x8a\x59\xeb\x17\x74\xc3\xa6\x49\xa8\x54\xfd\x23\x1c\x3b\x97\x6f\x0c\x33\x95\xbe\x14\x06\x95\x60\xf9\x0d\xaa\x15\x2a\x3b\x23\xa4\x86\xcd\xb5\x5a\x83\x8d\xb6\xad\x01\x77\x89\xe5\x06\x0b\x7b\x3d\x63\xd0\x34\x78\xa5\xd4\x9a\xcf\xe9\x8a\x2a\x52\x54\xc0\xc0\x77\x07\xa8\x4f\x78\x5f\x2b\x54\x1b\x28\x99\x62\x05\x1a\x54\x11\x5c\x50\xa3\x4a\x78\x98\x42\xca\x15\x26\x46\xaa\x0d\x5d\x75\x19\xe4\x5c\x2c\x89\xad\xf4\xd6\xf5\xac\xfb\x09\x63\xc2\x62\x22\x75\x7d\xae\x90\xe2\xf5\x91\xb5\x54\x48\x6e\x6d\xc6\x73\x8c\x1e\x26\xb2\xb5\xa9\x97\x27\xb2\xb9\xb7\xf4\x13\x99\x62\x86\x0a\xc8\xb6\xeb\xe6\x07\x33\xdb\x90\xf1\x09\x99\x7d\x51\x6a\xa9\x19\xdf\x05\xa1\xd7\x6a\xe1\x2f\xba\xf0\xd6\x6a\x54\xb7\xe8\xcd\x04\x6f\x34\x52\x68\x2a\x25\x6c\x37\x2f\x4b\xa3\xf7\xdb\x77\x27\xb4\x3d\x6c\x35\xad\x3f\xc7\x9c\x17\x14\xbd\x09\xf8\xb1\x3f\xf6\x46\x23\x77\x80\x4d\x48\x1a\x15\x7e\x8d\xde\x48\x55\xfc\x46\xca\x19\x34\xb5\x11\x8e\x2d\x2c\x2d\xb2\x51\x71\x6d\x10\xe1\x06\x64\x2a\xf4\x46\xd4\x26\x10\xb8\x9c\x7f\x19\x37\xc1\xa3\xe9\xd1\x3b\xbc\x37\x01\xa1\x9e\xb9\xaf\x07\x01\x29\x43\x13\xe1\xd9\x0c\xb8\x8c\x2e\xae\xdf\xb8\xb8\xcd\x15\xb2\xa5\x0b\x41\x33\xa3\x1d\xd6\xf6\xc6\xb3\xc2\xb8\xa0\x66\x81\xff\x86\xf1\x1c\x53\xaa\x27\xb2\xc8\xdc\xa9\x29\xf0\xde\x74\xda\xaf\x25\x6e\x26\xf0\xb7\x95\x6f\xdd\x23\x1f\xf6\x01\x73\xf6\x2c\x78\xbb\xb5\x9e\x01\x2b\x4b\x14\x69\xd0\x7b\x35\x06\x39\xff\x12\xba\x90\x64\x90\xa3\xe8\x4f\x09\x69\x6f\x3f\xf4\xf2\xe5\x3e\x3d\x3a\xb1\x13\xd2\xfa\x67\xf9\xe9\x22\xea\x37\xd4\x7e\xc0\x83\xd6\x37\xb0\x97\xf3\xa0\xb9\x71\x92\x6b\x5d\x2a\x50\x29\xbc\xa5\x28\x3d\x28\x02\xba\x30\xd4\x15\xa0\x97\xbc\xdc\xdf\x85\x26\x33\xc8\x58\xae\x71\x98\x41\xaf\x3a\x73\x5d\x02\x07\x78\xd5\x9c\x3f\x4f\xe1\xd5\xcb\x88\x65\xd3\xfc\xbf\x60\x17\xcf\x9c\x87\xf6\x72\x74\xf8\xb6\x16\xc7\xf0\x4e\xda\xcb\x94\xbb\xbd\x62\x1a\xc1\x07\xac\x55\x96\x2e\x1c\xb0\xe6\x66\x01\x0c\x52\x25\xcb\x54\xae\x05\x95\x69\x7d\xc9\x96\x02\x23\x32\x3e\x40\x30\xc1\x73\xf2\xbe\x21\xd8\x53\x19\x76\x84\x62\x7b\x8e\xd9\x68\x0c\xb1\xec\x28\xcd\xb2\x6f\xa4\xd9\x81\x67\xb5\xcd\x6f\x60\x5a\x23\x09\x7f\xc5\xb5\x67\x92\xcd\x96\x03\xd0\x5d\xbc\xc9\xe0\x4f\x36\x81\x6b\xa6\xa1\x54\x72\xc5\x53\x4a\xe2\xb9\x5c\x8b\x5c\xb2\xd4\xb5\xff\x74\x63\xa6\x64\xd8\x63\x6b\x89\x1b\xca\x5b\xa7\xd4\x67\x60\x54\x85\xb6\x64\x58\x4a\xdc\x6c\x6a\xde\x25\xf5\x1d\xae\x3f\xd8\x17\xdd\x9c\x8d\x0f\x35\x35\x86\x3a\xe7\xcf\xd0\xc0\x43\x72\x12\x85\xe4\x85\xb3\xf1\x98\xe2\x39\xd2\x3a\x27\xa3\xb3\x5c\x6a\x0c\xac\x51\x19\x9d\xc9\x72\x43\x04\x73\xef\x42\x17\x99\x87\x9f\x75\xcf\xa4\xd0\x9c\x8a\x5b\xa3\x31\x5c\xdc\x41\x7d\x4d\x7f\x7d\xbb\x29\x71\xbc\xff\x75\x85\xe2\xce\x2c\x60\x61\xa1\x74\x34\x2c\x70\xed\x2f\xf4\x2f\x57\xb8\x7d\x1f\xb7\x97\xb8\xc3\x5f\x5f\xec\x0e\x7f\x47\x64\xaf\xfb\xa5\xb3\xa7\x8e\xfb\xee\xa6\x96\xc8\x27\xdd\x26\xf6\x17\xe2\xff\x8b\xeb\xc4\x80\xe0\x7d\xf7\x5d\x3d\xd4\xed\xd0\x0e\x6a\xf8\xd7\x7a\x79\x8c\xaa\x48\x1b\x01\x66\xef\x8d\x58\x94\x66\xd3\x6b\x50\xc3\x23\xf8\xc7\x7c\x79\xdc\x92\x96\xc5\xfe\xe3\xe1\xa1\xfd\xec\xdb\xe8\xd2\xd8\xda\xfa\x29\xcf\x1f\x61\xf1\x1f\x7f\xce\x37\x06\x83\x01\xdf\x42\x47\xf1\x5e\xaa\x8f\xb1\xdb\xed\xdc\x71\xbc\x43\xe9\x96\x78\xb5\xcc\x34\xdf\xdf\x1b\x25\x22\xca\xfd\x37\x00\x00\xff\xff\x2a\x5c\x56\x71\x19\x1d\x00\x00"),
		},
		"/demo/secrets.keeper": &vfsgen۰DirInfo{
			name:    "secrets.keeper",
			modTime: time.Time{},
		},
		"/demo/secrets.keeper/demo_secrets_keeper.go": &vfsgen۰CompressedFileInfo{
			name:             "demo_secrets_keeper.go",
			modTime:          time.Time{},
			uncompressedSize: 5596,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\xff\x73\xdb\xb6\x15\xff\x59\xfc\x2b\x5e\x78\xb7\x9e\xd8\x2a\x64\x7b\x97\x76\xab\x47\xaa\x97\xda\x72\xe6\x4b\x56\xbb\x96\xb3\xdd\x6e\xb7\x4b\x20\xf2\xd1\x42\x4d\x02\x2c\x00\x4a\x76\x7d\xfc\xdf\x77\x0f\x00\xa9\x2f\x56\x7c\x71\x93\xdd\xb6\xfc\x10\x4b\x00\xde\xe7\x7d\xfd\x3c\xe0\xa9\x61\xf9\x0d\xbb\x46\xa8\x19\x17\x41\xc0\xeb\x46\x2a\x03\xe3\x60\x14\xe6\x52\x18\xbc\x35\x61\x30\x0a\x51\xe4\xb2\xe0\xe2\x3a\x59\x30\x8d\xdf\xbd\xa0\xa5\xb2\xb6\x3b\x4b\x53\x57\x89\xc1\xba\xa9\x98\x41\x5a\x10\x68\x92\xa5\x31\x0d\x7d\x96\x3a\x0c\x82\x51\x78\x2d\xf3\x4a\xb6\x45\x5c\xe0\x2a\xd1\x98\x2b\x34\x3a\x0c\x46\xef\xe0\xd0\x46\x52\xc9\x9c\x55\xc3\xa9\x28\x08\x92\x04\xae\xce\x4f\xce\xc7\x6a\xc5\xc4\x35\x0a\x13\x1d\xc1\xd5\x92\x6b\x28\x79\x85\xc0\x35\xb4\x1a\xd5\xf3\x15\xd7\x7c\x51\xe1\x04\x58\x51\x40\xcd\xc4\x1d\xe4\xb2\xae\x51\x18\x0d\x78\xdb\x54\x8c\x0b\x2e\xae\x09\x6a\x29\xd7\xc0\x0d\xac\xa5\xba\xd1\x71\x10\x94\xad\xc8\x81\x0b\x6e\xc6\x11\xdc\x07\x23\x32\x3c\xfe\x0b\x13\x45\x85\xa7\xad\xc8\xc7\x61\x52\x60\x2d\x7b\xdb\xe2\x1b\xc4\x06\x55\x12\x4e\xc0\xaf\xbc\xb6\x0b\x33\x91\xab\xbb\xc6\x38\x39\x15\x7d\x2c\x0c\x3a\xb1\xcf\x84\x56\xe0\x41\xb4\x13\xdc\x45\xeb\x82\x60\xc5\x14\x38\xa1\xb7\x97\x6f\x40\x1b\x45\xa1\xd9\x2c\xc2\x97\x3d\xb2\x43\xd8\xda\x9a\x29\x05\xa8\x94\x54\x0f\x02\xb7\xc1\xcb\x40\xea\xf8\x15\x1a\x14\xab\x71\x38\x9f\x1d\x5f\xce\xae\xe6\xef\x5e\xcf\x66\x17\xb3\xcb\x77\x6f\x2f\xdf\x84\x51\x30\xe2\xe5\x96\xfe\x2c\x83\x30\x24\x88\xd1\x81\x44\x5f\x62\x2d\x57\x08\x05\x96\xac\xad\x0c\x50\x8d\xa9\x38\x18\xed\xa8\x0b\x5d\x4d\xde\xe0\xdd\x51\x92\xe8\xfa\xd5\xe2\x97\xfa\x8f\xdf\xfc\x74\x5b\x7c\x73\x76\xfd\xed\xe9\xfc\xeb\xf5\x2f\xdf\xcf\xab\xc5\x6f\x2f\xcf\x94\x90\xd5\xf1\x6f\xdf\x2f\x7e\xfe\xf9\xbb\xf6\xe5\xb2\x7a\x91\x85\xc1\xa8\xeb\x2d\x9f\x6c\x79\x98\xf5\x11\x8c\xcf\x1b\x14\x2e\x08\x63\x4f\x86\xf8\x47\x96\xdf\x5c\x2b\xd9\x8a\x62\x1c\x4d\x36\x6e\xd8\xc0\x9a\xbb\x06\xf7\xa2\xcf\x0c\xa3\x08\xb7\xb9\x21\x17\xb7\xe2\x3d\xda\x8a\xe5\xe8\x4c\x00\xfd\x73\x5b\x90\x24\xb6\xa6\x81\x8b\xa6\x35\xc1\xe8\xbc\x35\xbb\x9b\xb2\x35\x76\xe3\x47\xeb\x37\x2c\xa4\xac\x48\x7b\x2e\x85\xb6\xc4\xdd\xb1\xe0\xca\x53\xf3\x42\x61\xc9\x6f\x21\x83\xf7\x41\xfa\xec\xe4\xfc\xf8\xea\x1f\x17\x33\x20\xf2\x4e\x83\xb4\xff\x83\xac\x98\x06\x00\x69\x8d\x86\x41\xbe\x64\x4a\xa3\xc9\xc2\xb7\x57\xa7\xcf\xff\x14\xda\x0d\xc3\x4d\x85\xd3\xdd\xf2\x00\x2a\xc6\x34\x71\x5b\x41\x9a\x38\x94\x74\x21\x8b\x3b\x2b\xd3\xd0\xff\xe0\x28\xdb\x50\x9f\xa1\xf3\x42\x1b\xc5\x0c\x6a\x30\x4b\x24\x67\x41\x96\xc0\xe0\x95\x84\xe3\x93\xd7\xb0\x8b\x1f\x13\x48\xd2\x6c\x63\x9d\x19\xe2\x7d\xde\x2a\x85\xc2\x54\x77\xd0\x6a\x8a\x0c\xdb\x13\x04\xaa\x8b\x02\xa4\xb0\x4a\x28\xf4\xe1\xfd\x3d\xc4\xf4\xa1\xeb\xc2\x09\xac\x97\x3c\x5f\x5a\xbc\x9c\x09\x58\x20\xe4\x52\x94\xfc\xba\x55\x58\xc0\x8a\x33\x2b\x85\x62\xc5\x95\x14\xd4\x48\x60\xc5\x14\x67\x8b\x0a\xe1\x50\x55\x1f\xb0\x72\x8e\x08\x29\x83\xa5\xc2\x32\x0b\x89\xc3\xfa\x28\x49\xb6\x3b\x5e\x2e\x45\x8e\x8d\xd1\x49\xab\x2a\x9d\x84\xd3\x25\x2a\x4c\x13\x36\x85\x52\x2a\xa8\xa5\x42\x0b\xc3\x45\x29\x55\xcd\x0c\x97\x02\xd8\x42\xb6\x86\x5c\xd1\xc0\x45\x1f\xae\x97\x17\x67\x7a\x5b\x7d\x5b\x39\xfd\x69\xc5\xa7\x83\xfe\x78\xe8\x36\x53\xdf\x5f\xac\x26\x17\x39\xf2\xd4\xc5\x2c\x4d\x2a\x7e\x50\xba\xef\x2e\x53\xdf\x4f\x1e\x95\x4e\x13\x67\xc3\xfd\x3d\x2f\x21\x9e\x29\xd5\x75\x0e\xb3\x99\xa6\xda\x28\x29\xae\xa7\x94\x09\x62\x40\xd7\xa5\x89\x5f\xf2\xf6\xdf\xdf\xa3\x28\xba\x2e\x78\xff\x81\x42\x9e\xb7\xe5\x50\xc8\x89\xab\xb2\x34\x71\x15\xfc\x3e\x08\xa8\x89\x9c\x11\x6f\x8e\x86\x36\xb6\x61\x62\xbc\x07\xe9\x23\xd1\x23\x6f\x88\x7f\x90\x3a\x5f\xc1\x7b\xf2\x8d\xb2\x31\xed\xdd\xb1\x7f\x01\x66\xc2\xa0\x02\x7b\xcd\x50\x93\x80\x82\x68\x6f\x24\xf8\x98\x1f\xf9\x63\xe9\x42\x25\xbd\x48\x4a\x07\x99\x42\x06\x4a\xae\x75\x16\xbe\x08\x21\x97\x95\xce\xc2\x6f\xbf\x0e\x41\xb0\x1a\xb3\x70\xc0\x0b\xa1\x62\x0b\xac\xb2\xf0\x62\xd0\xb0\x01\x0f\x6d\x2c\xcf\x84\x0d\x65\x0f\xea\x0d\x4c\xbc\x85\xa9\x6d\x25\x40\xfd\x29\x0b\xf3\x25\xe6\x37\x0b\x79\x1b\x02\x2f\x32\xdf\x3c\x7b\x95\xfd\xb7\x15\xab\x5a\xcc\x42\xa3\x5a\x0c\x7d\x1a\x5d\xb7\xe9\x3a\x2b\x8e\x85\x4f\x53\x5f\x2c\x64\x1f\xd5\xed\x00\x31\xbd\x5a\xa2\x8b\x03\x5b\x50\x0b\xe7\x1a\xdc\x0e\xd8\xb7\x04\x16\x69\x62\x85\x3c\xc0\x10\x99\x1d\x53\x75\xbb\xa8\xb9\x19\xcc\xf1\xf9\x7a\xe6\x9a\x51\xd2\x67\xc2\xd9\x77\xde\x9a\x4d\x99\x0d\x79\xb1\x02\x58\x80\x42\x4d\x17\xc8\x78\xd7\x86\xe8\xc9\x99\x51\xc8\x0a\x29\xaa\xbb\x3e\x36\x3e\x31\xfb\x8a\x5c\x52\xa8\x73\x3f\x96\x95\x82\xaf\x06\xa5\x0f\xa8\xf6\x43\xce\x9b\x25\x2a\x92\xcd\x36\x60\x5f\x38\x07\xec\x8a\xef\xff\x5d\x37\xb0\x12\xb8\x25\xa6\x57\xe3\xe1\x07\x42\xc1\x57\x87\xeb\xdb\x31\xea\x89\xdc\xf1\x1a\x3f\x17\x77\x9c\x5b\xcf\x7d\x5e\x06\x02\xf9\x58\xfc\x4e\x02\x6d\x22\x38\x24\xea\x78\x58\xda\x82\xff\x5f\xa5\xd0\x9c\x1e\xab\xbe\x72\x77\x03\xf4\x3b\xc8\xe3\x13\xf6\xf1\xe4\xf1\x02\x43\x4d\x7f\x2e\xae\xec\xe3\x7e\x0a\x57\x7c\x0f\xfc\x61\x68\x95\x07\xa9\x32\x04\x7e\xb8\xfc\x3e\x89\x28\x91\x7b\x42\xef\xbf\xb4\xfa\xdb\xa4\x6e\x2a\xc8\xa0\x1f\x89\xe2\xbf\xb6\xda\x8c\x87\x6f\x3f\xe1\x7a\x1c\xee\xbd\x53\xfa\x46\x1e\xc5\x17\xf4\xe4\x1a\x3f\x76\x47\x45\xd1\x07\x78\xf8\x64\xad\x7d\xed\x1f\xd4\xba\xc7\xee\x28\xf2\x83\xd8\x23\x83\x0a\xb0\xaa\x92\xeb\xe1\x45\xa7\xdc\x15\x45\xdc\xd6\xb2\xc6\x81\xd1\x0b\xec\xfd\xc5\x22\x76\x53\xc4\x23\xa0\xe3\x35\xd8\xe9\xe7\x12\x75\x23\x85\xc6\xbf\x2b\x6e\xe8\xb1\xae\xf0\x57\xf8\xd2\xef\xfc\xda\xa2\x36\x76\x08\x71\xd5\x7f\x94\xc1\x17\x0f\xda\x17\xcd\x17\x6f\x2f\xdf\x1c\x51\xc2\x87\x47\xfb\x24\x18\x8d\xce\x84\x5d\x23\xc4\xf8\x54\xaa\xfa\x6f\xc4\x96\xf1\xd6\xdd\x1b\xd1\x29\x57\x40\x47\xfb\xa7\x3c\x51\x23\x3b\xc4\xd8\x22\x9f\xd8\x99\xa2\xc0\x12\x15\x90\x73\x6e\x3a\xa2\x89\x07\x95\x22\xd3\x3e\x54\x32\xf1\xec\x16\xf3\xd6\xe0\x78\x3d\x71\x0f\xff\xe8\xcf\x56\xe4\x59\x06\x82\x57\x16\xc4\x0d\x82\x33\x9a\x19\xe8\x14\x2a\xe5\xbf\x44\x13\x17\xa5\xb9\x61\xa6\xd5\x67\x14\x74\xc1\xaa\x39\xaa\x95\x1d\x68\x24\x0d\x91\x64\x56\x37\x8e\x82\xad\xe9\x6b\xb6\x0b\x6f\xb5\xc6\x6e\x00\x1a\x0e\x04\xa3\x91\x42\xd3\x2a\x61\xfd\xe2\xa5\xb3\x8d\x7a\xe5\xb3\x61\x6e\x23\x32\x70\x01\xff\xfc\xd7\xe2\xce\xa0\x73\xd6\x9d\xf2\x17\x94\xb5\x9d\x0e\xe1\x30\xf2\x8c\x48\x9d\x75\x01\x32\xdf\xda\xe2\xb9\x29\x66\xfe\x67\x86\xf8\x04\xa9\xcd\xcd\xed\xc8\x33\xee\x55\x46\x56\xac\x7c\x10\x96\x1d\xcb\xcb\xda\xb8\xa8\x94\xe3\xad\xe7\x92\xad\xbe\x35\xd3\x20\x24\x3d\xe4\x2b\x5e\x40\x9f\xd2\x3f\xac\x42\x6b\x88\x45\x1f\x9c\xb5\xf1\x1a\x75\x80\x95\x46\xa7\x85\x0b\xc8\xbc\x8f\x3b\x16\xd1\xb9\xa1\xa2\x27\x7d\x9a\x5d\x00\x63\x9f\xe0\x31\xd5\xcd\xb1\x9b\x20\x29\x5b\xdc\x4a\x1e\x70\xe5\x43\x9e\x9c\x32\x5e\x61\xb1\xfd\xa4\xdc\xb5\x7b\x30\xbb\x1b\x12\x49\x4d\xf0\x60\x6c\xed\x07\xbc\x92\x3e\xba\x83\xed\x11\xa5\xb8\x7b\x48\xf3\xdd\x5f\x10\x3e\x9e\xe6\x05\x3e\x42\xf3\x5d\xd0\xff\x1a\xcd\xb7\x5e\x08\xff\x49\x9e\x6f\x35\xe9\xff\x63\x9e\xf7\x8c\x3d\x7a\x1a\x65\x9f\x50\xe6\x5b\xaf\xb3\x8f\x65\xec\x4e\xe5\x0f\x25\xb7\xcf\x43\x9f\x80\xcf\xc8\xc3\xfe\x65\xfa\x18\x0f\x0f\xf5\xc1\xa7\x91\x73\x70\x28\x7a\xd0\x8d\x36\x30\xfa\xd0\x59\x47\xe6\x7f\x07\x00\x00\xff\xff\x13\x1e\x21\x8b\xdc\x15\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/demo"].(os.FileInfo),
	}
	fs["/demo"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/demo/blob.bucket"].(os.FileInfo),
		fs["/demo/secrets.keeper"].(os.FileInfo),
	}
	fs["/demo/blob.bucket"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/demo/blob.bucket/demo_blob_bucket.go"].(os.FileInfo),
	}
	fs["/demo/secrets.keeper"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/demo/secrets.keeper/demo_secrets_keeper.go"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
